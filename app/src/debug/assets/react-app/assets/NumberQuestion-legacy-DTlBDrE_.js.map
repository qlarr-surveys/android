{"version":3,"file":"NumberQuestion-legacy-DTlBDrE_.js","sources":["../../src/components/Questions/Number/NumberQuestion.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\nimport styles from \"./NumberQuestion.module.css\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\n\nfunction NumberQuestion(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    let validity = questionState?.validity;\n    let invalid = (show_errors || isDirty) && validity === false;\n    return {\n      value: questionState?.value,\n      invalid: invalid,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const cleanupValue = (oldValue, newValue) => {\n    const regex =\n      props.component.decimal_separator == \".\"\n        ? /^[0-9]+\\.?[0-9]*$/\n        : props.component.decimal_separator == \",\"\n          ? /^[0-9]+,?[0-9]*$/\n          : /^[0-9]*$/;\n    if (newValue == \"\") {\n      return undefined;\n    }\n    if (regex.test(newValue)) {\n      let withDecimal = convertToDecimal(newValue)\n      let processed = +withDecimal;\n      let returning = isNaN(processed) ? oldValue : withDecimal;\n      return returning;\n    } else {\n      return oldValue;\n    }\n  };\n\n  const convertToDecimal = (value) => {\n    if (props.component.decimal_separator != \",\") {\n      return value;\n    }\n    let stringValue = value.toString();\n    return stringValue.replace(\",\", \".\");\n  };\n\n  const formatValue = (value) => {\n    return value === undefined\n      ? \"\"\n      : props.component.decimal_separator == \",\"\n        ? value.toString().replace(\".\", \",\")\n        : value;\n  };\n\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: cleanupValue(state.value, event.target.value),\n      })\n    );\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n    let processed = +state.value;\n    if (!isNaN(processed)) {\n      dispatch(\n        valueChange({\n          componentCode: props.component.qualifiedCode,\n          value: processed,\n        })\n      );\n    }\n  };\n\n  return (\n    <div className={styles.questionItem}>\n      <TextField\n        variant=\"standard\"\n        required={\n          props.component.validation?.validation_required?.isActive\n            ? true\n            : false\n        }\n        id={props.component.qualifiedCode}\n        name={props.component.qualifiedCode}\n        label={(props.component.showHint && props.component.content?.hint )|| \"\"}\n        onChange={handleChange}\n        onBlur={lostFocus}\n        inputProps={{ maxLength: props.component.maxChars || undefined }}\n        value={formatValue(state.value)}\n        error={state.invalid}\n        InputProps={{\n          sx: {\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n            borderBottom: '1px solid'\n\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default NumberQuestion;\n"],"names":["NumberQuestion","props","_props$component$vali","_props$component$cont","theme","useTheme","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","validity","invalid","value","shallowEqual","dispatch","useDispatch","cleanupValue","oldValue","newValue","regex","decimal_separator","test","withDecimal","convertToDecimal","processed","returning","isNaN","stringValue","toString","replace","formatValue","handleChange","event","valueChange","componentCode","target","name","lostFocus","setDirty","jsx","className","styles","questionItem","children","TextField","variant","required","validation","validation_required","isActive","id","label","showHint","content","hint","onChange","onBlur","inputProps","maxLength","maxChars","error","InputProps","sx","fontFamily","textStyles","text","font","color","fontSize","size","borderBottom"],"mappings":"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"}