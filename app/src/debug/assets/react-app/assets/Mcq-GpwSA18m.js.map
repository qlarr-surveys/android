{"version":3,"file":"Mcq-GpwSA18m.js","sources":["../../src/components/Questions/Mcq/MCQAnswer.jsx","../../src/components/Questions/Mcq/Mcq.jsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { alpha, useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport Content from \"~/components/run/Content\";\n\nfunction McqAnswer(props) {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const disabled =\n    (props.Answer.type !== \"all\" && props.allSelected) ||\n    (props.Answer.type !== \"none\" && props.noneSelected);\n\n  const relevance = useSelector((state) => {\n    let answerState = state.runState.values[props.Answer?.qualifiedCode];\n    return (\n      typeof answerState?.relevance == \"undefined\" || answerState.relevance\n    );\n  }, shallowEqual);\n\n\n  const handleChange = (event) => {\n    let value = [...props.parentValue];\n    if (event.target.checked && props.Answer.code === \"Aall\") {\n      value = props.allCodes;\n    } else if (!event.target.checked && props.Answer.code === \"Aall\") {\n      value = [];\n    } else if (event.target.checked && props.Answer.code === \"Anone\") {\n      value = [\"Anone\"];\n    } else if (event.target.checked) {\n      value.push(props.Answer.code);\n    } else {\n      value = value.filter((el) => el !== props.Answer.code);\n    }\n    console.log(value);\n    dispatch(\n      valueChange({\n        componentCode: props.parentCode,\n        value: value,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n  };\n\n  return relevance ? (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={\n            props.parentValue.indexOf(props.Answer.code) > -1 ||\n            (props.Answer.code === \"Aall\" && props.allSelected)\n          }\n          onChange={handleChange}\n          disabled={disabled}\n          name={props.Answer.qualifiedCode}\n          sx={{\n            color: theme.textStyles.text.color,\n          }}\n        />\n      }\n      label={\n        <Content\n          elementCode={props.Answer.code}\n          fontFamily={theme.textStyles.text.font}\n          color={alpha(theme.textStyles.text.color, disabled ? 0.5 : 1)}\n          fontSize={theme.textStyles.text.size}\n          name=\"label\"\n          lang={props.lang}\n          content={props.Answer.content?.label}\n        />\n      }\n    />\n  ) : (\n    \"\"\n  );\n}\n\nexport default memo(McqAnswer);\n","import FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/RadioGroup\";\n\nimport React, { memo, useRef } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Validation from \"~/components/run/Validation\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport MCQAnswer from \"./MCQAnswer\";\n\nfunction MCQ(props) {\n  const parentValue = useSelector((state) => {\n    return state.runState.values[props.component.qualifiedCode].value || [];\n  }, shallowEqual);\n  const allCodes = props.component.answers\n    .filter(\n      (answer) =>\n        answer.type !== \"all\" &&\n        answer.type !== \"none\" &&\n        answer.type !== \"other\"\n    )\n    .map((answer) => answer.code);\n  const allSelected = allCodes.every((code) => parentValue.indexOf(code) > -1);\n  const noneSelected = parentValue.indexOf(\"Anone\") > -1;\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        {props.component.answers.map((option) => {\n          if (option.type === \"other\") {\n            return (\n              <McqAnswerOther\n                disabled={allSelected || noneSelected}\n                key={option.qualifiedCode}\n                allSelected={allSelected}\n                noneSelected={noneSelected}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          } else {\n            return (\n              <MCQAnswer\n                lang={props.lang}\n                parentValue={parentValue}\n                key={option.qualifiedCode}\n                Answer={option}\n                allCodes={allCodes}\n                parentCode={props.component.qualifiedCode}\n                allSelected={allSelected}\n                noneSelected={noneSelected}\n              />\n            );\n          }\n        })}\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nfunction McqAnswerOther(props) {\n  const theme = useTheme();\n  const nestedTextChild = props.Answer.answers[0];\n  const parentValue = useSelector((state) => {\n    return state.runState.values[props.parentCode].value || [];\n  }, shallowEqual);\n  const isSelected = parentValue.indexOf(props.Answer.code) > -1;\n  const state = useSelector((state) => {\n    let own = state.runState.values[props.Answer.qualifiedCode];\n    let textChild = state.runState.values[nestedTextChild.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isChildDirty = state.templateState[nestedTextChild.qualifiedCode];\n    return {\n      showAnswer: typeof own?.relevance === \"undefined\" || own.relevance,\n      childInvalid:\n        (show_errors || isChildDirty) &&\n        textChild?.relevance === true &&\n        textChild?.validity === false,\n      textValue: textChild?.value || \"\",\n      textRelevance: state.textChild?.relevance,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const onButtonClick = (event) => {\n    let value = [...parentValue];\n    if (event.target.checked) {\n      value.push(props.Answer.code);\n    } else {\n      value = value.filter((el) => el !== props.Answer.code);\n    }\n    dispatch(\n      valueChange({\n        componentCode: props.parentCode,\n        value: value,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n    if (event.target.checked) {\n      textInput.current.focus();\n    }\n  };\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const textInput = useRef();\n  const handleFocus = (event) => {\n    let value = [...parentValue];\n    if (value.indexOf(props.Answer.code) == -1) {\n      value.push(props.Answer.code);\n      dispatch(valueChange({ componentCode: props.parentCode, value: value }));\n    }\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n  };\n\n  const showAnswer = () => {\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isSelected}\n            disabled={props.disabled}\n            onChange={onButtonClick}\n            name={props.Answer.qualifiedCode}\n            sx={{\n              color: theme.textStyles.text.color,\n            }}\n          />\n        }\n        label={\n          <div >\n            <TextField\n              variant=\"standard\"\n              required={\n                state.textRelevance && nestedTextChild.validation?.required\n              }\n              inputRef={textInput}\n              id={nestedTextChild.qualifiedCode}\n              name={nestedTextChild.qualifiedCode}\n              disabled={props.disabled}\n              label={props.Answer.content?.label}\n              onChange={handleChange}\n              onFocus={handleFocus}\n              onBlur={lostFocus}\n              sx={{\n                label: { color: theme.textStyles.text.color },\n              }}\n              value={state.textValue}\n              InputProps={{\n                sx: {\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                },\n              }}\n              helperText={\n                state.childInvalid ? (\n                  <Validation component={nestedTextChild} limit={1} />\n                ) : (\n                  \"\"\n                )\n              }\n            />\n          </div>\n        }\n      />\n    );\n  };\n\n  return state.showAnswer ? showAnswer() : \"\";\n}\n\nexport default memo(MCQ);\n"],"names":["_a","jsx","memo","FormGroup","state","useRef"],"mappings":"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"}