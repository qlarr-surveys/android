{"version":3,"file":"index-Bu4bJcoo.js","sources":["../../src/components/manage/SurveyActiveFromTo/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { TextField, FormHelperText, Button, Box } from \"@mui/material\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport { DateTimePicker } from \"@mui/x-date-pickers\";\n\nconst renderInput = (props) => {\n  return (\n    <TextField\n      {...props}\n      variant=\"outlined\"\n      sx={{\n        \"& .MuiOutlinedInput-root\": {\n          borderRadius: \"16px\",\n          backgroundColor: \"#f7f8fc\",\n          border: \"none\",\n        },\n        \"& .MuiInputLabel-root\": {\n          color: \"#a6a8ab\",\n          fontWeight: \"500\",\n        },\n        \"& .MuiOutlinedInput-notchedOutline\": {\n          border: \"none\",\n        },\n      }}\n    />\n  );\n};\n\nexport const SurveyActiveFromTo = ({\n  error,\n  surveyActiveFrom: initialSurveyActiveFrom,\n  surveyActiveTo: initialSurveyActiveTo,\n  onSurveyActiveFromChanged,\n  onSurveyActiveToChanged,\n  disabled,\n}) => {\n  const { t } = useTranslation(\"manage\");\n  const [surveyActiveFrom, setSurveyActiveFrom] = useState(\n    initialSurveyActiveFrom\n  );\n  const [surveyActiveTo, setSurveyActiveTo] = useState(initialSurveyActiveTo);\n  const [isDirty, setIsDirty] = useState(false);\n\n  useEffect(() => {\n    setSurveyActiveFrom(initialSurveyActiveFrom);\n    setSurveyActiveTo(initialSurveyActiveTo);\n  }, [initialSurveyActiveFrom, initialSurveyActiveTo]);\n\n  const handleSurveyActiveFromChange = (newValue) => {\n    setSurveyActiveFrom(newValue);\n    setIsDirty(true);\n  };\n\n  const handleSurveyActiveToChange = (newValue) => {\n    setSurveyActiveTo(newValue);\n    setIsDirty(true);\n  };\n\n  const handleSaveChanges = () => {\n    const fromChanged = dayjs(surveyActiveFrom).toDate();\n    const toChanged = dayjs(surveyActiveTo).toDate();\n\n    if (surveyActiveFrom && !isEqualDates(fromChanged, dayjs(initialSurveyActiveFrom).toDate())) {\n      onSurveyActiveFromChanged(fromChanged);\n    }\n\n    if (surveyActiveTo && !isEqualDates(toChanged, dayjs(initialSurveyActiveTo).toDate())) {\n      onSurveyActiveToChanged(toChanged);\n    }\n\n    setIsDirty(false);\n  };\n\n  function isEqualDates(date1, date2) {\n    if (!date1 && !date2) return true;\n    if (!date1 || !date2) return false;\n    return date1.getTime() === date2.getTime();\n  }\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" gap={2}>\n\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <Box display=\"flex\" gap={2}>\n          <DateTimePicker\n            disabled={disabled}\n            label={t(\"label.from\")}\n            value={surveyActiveFrom}\n            onChange={handleSurveyActiveFromChange}\n            renderInput={renderInput}\n          />\n          <DateTimePicker\n            disabled={disabled}\n            label={t(\"label.to\")}\n            value={surveyActiveTo}\n            onChange={handleSurveyActiveToChange}\n            renderInput={renderInput}\n          />\n        </Box>\n        {error && (\n          <FormHelperText style={{ color: \"red\" }}>{error}</FormHelperText>\n        )}\n        {isDirty && (\n          <Button onClick={handleSaveChanges} variant=\"contained\" color=\"primary\">\n            {t(\"save_changes\")}\n          </Button>\n        )}\n      </LocalizationProvider>\n    </Box>\n\n  );\n};\n"],"names":["jsx","useState","useEffect","jsxs"],"mappings":";;;;;;AAQA,MAAM,cAAc,CAAC,UAAU;AAE3B,SAAAA,kCAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,GAAG;AAAA,MACJ,SAAQ;AAAA,MACR,IAAI;AAAA,QACF,4BAA4B;AAAA,UAC1B,cAAc;AAAA,UACd,iBAAiB;AAAA,UACjB,QAAQ;AAAA,QACV;AAAA,QACA,yBAAyB;AAAA,UACvB,OAAO;AAAA,UACP,YAAY;AAAA,QACd;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,IAAA;AAAA,EAAA;AAGN;AAEO,MAAM,qBAAqB,CAAC;AAAA,EACjC;AAAA,EACA,kBAAkB;AAAA,EAClB,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,EAAE,EAAA,IAAM,eAAe,QAAQ;AAC/B,QAAA,CAAC,kBAAkB,mBAAmB,IAAIC,aAAA;AAAA,IAC9C;AAAA,EAAA;AAEF,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,sBAAS,qBAAqB;AAC1E,QAAM,CAAC,SAAS,UAAU,IAAIA,sBAAS,KAAK;AAE5CC,eAAAA,UAAU,MAAM;AACd,wBAAoB,uBAAuB;AAC3C,sBAAkB,qBAAqB;AAAA,EAAA,GACtC,CAAC,yBAAyB,qBAAqB,CAAC;AAE7C,QAAA,+BAA+B,CAAC,aAAa;AACjD,wBAAoB,QAAQ;AAC5B,eAAW,IAAI;AAAA,EAAA;AAGX,QAAA,6BAA6B,CAAC,aAAa;AAC/C,sBAAkB,QAAQ;AAC1B,eAAW,IAAI;AAAA,EAAA;AAGjB,QAAM,oBAAoB,MAAM;AAC9B,UAAM,cAAc,MAAM,gBAAgB,EAAE,OAAO;AACnD,UAAM,YAAY,MAAM,cAAc,EAAE,OAAO;AAE3C,QAAA,oBAAoB,CAAC,aAAa,aAAa,MAAM,uBAAuB,EAAE,OAAO,CAAC,GAAG;AAC3F,gCAA0B,WAAW;AAAA,IACvC;AAEI,QAAA,kBAAkB,CAAC,aAAa,WAAW,MAAM,qBAAqB,EAAE,OAAO,CAAC,GAAG;AACrF,8BAAwB,SAAS;AAAA,IACnC;AAEA,eAAW,KAAK;AAAA,EAAA;AAGT,WAAA,aAAa,OAAO,OAAO;AAClC,QAAI,CAAC,SAAS,CAAC,MAAc,QAAA;AAC7B,QAAI,CAAC,SAAS,CAAC,MAAc,QAAA;AAC7B,WAAO,MAAM,QAAA,MAAc,MAAM,QAAQ;AAAA,EAC3C;AACA,SACGF,kCAAAA,IAAA,KAAA,EAAI,SAAQ,QAAO,eAAc,UAAS,OAAM,QAAO,KAAK,GAE3D,UAACG,kCAAA,KAAA,sBAAA,EAAqB,aAAa,cACjC,UAAA;AAAA,IAAAA,kCAAA,KAAC,KAAI,EAAA,SAAQ,QAAO,KAAK,GACvB,UAAA;AAAA,MAAAH,kCAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA,OAAO,EAAE,YAAY;AAAA,UACrB,OAAO;AAAA,UACP,UAAU;AAAA,UACV;AAAA,QAAA;AAAA,MACF;AAAA,MACAA,kCAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA,OAAO,EAAE,UAAU;AAAA,UACnB,OAAO;AAAA,UACP,UAAU;AAAA,UACV;AAAA,QAAA;AAAA,MACF;AAAA,IAAA,GACF;AAAA,IACC,+CACE,gBAAe,EAAA,OAAO,EAAE,OAAO,SAAU,UAAM,OAAA;AAAA,IAEjD,WACEA,kCAAAA,IAAA,QAAA,EAAO,SAAS,mBAAmB,SAAQ,aAAY,OAAM,WAC3D,UAAE,EAAA,cAAc,EACnB,CAAA;AAAA,EAAA,EAEJ,CAAA,EACF,CAAA;AAGJ;"}