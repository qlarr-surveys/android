{"version":3,"file":"index-D1scztg5.js","sources":["../../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../../node_modules/@mui/material/TableSortLabel/TableSortLabel.js","../../node_modules/@mui/icons-material/esm/PersonAdd.js","../../src/components/users/UserDelete/index.jsx","../../src/pages/manage/AddEditUser/index.jsx","../../src/components/users/UsersTable/index.jsx","../../src/pages/manage/ManageUsers/index.jsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: (theme.vars || theme).palette.text.secondary\n  },\n  '&:hover': {\n    color: (theme.vars || theme).palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n  const {\n      active = false,\n      children,\n      className,\n      direction = 'asc',\n      hideSortIcon = false,\n      IconComponent = ArrowDownwardIcon\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","import { Box, Modal, Typography, Button } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport styles from \"./UserDelete.module.css\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nexport const UserDelete = ({ open, onClose, deleteUser, name, isLoading }) => {\n  const { t } = useTranslation(\"manage\");\n  return (\n    <Modal\n      sx={{\n        \".MuiBackdrop-root\": {\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        },\n      }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles.wrapper}>\n        <Typography>{t(\"users_manage.delete_title\", { name })}</Typography>\n        <Box className={styles.action}>\n          <LoadingButton\n            variant=\"contained\"\n            onClick={deleteUser}\n            loading={isLoading}\n          >\n            {t(\"action_btn.delete\")}\n          </LoadingButton>\n          <Button onClick={onClose}>{t(\"action_btn.cancel\")}</Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Box, Card, Typography, Dialog, Stack } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport styles from \"./AddEditUser.module.css\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { ROLES } from \"~/constants/roles\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport { useDispatch } from \"react-redux\";\nimport FormProvider, {\n  RHFMultiSelect,\n  RHFTextField,\n} from \"~/components/hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm, useWatch } from \"react-hook-form\";\nimport { useService } from \"~/hooks/use-service\";\n\nfunction AddEditUser({ userId, open, onClose }) {\n  const userService = useService(\"user\");\n\n  const { t } = useTranslation(\"manage\");\n  const dispatch = useDispatch();\n  Yup.addMethod(Yup.string, \"noWhitespace\", function (errorMessage) {\n    return this.test(\"no-whitespace\", errorMessage, function (value) {\n      const { path, createError } = this;\n      return value?.trim()\n        ? true\n        : createError({ path, message: errorMessage });\n    });\n  });\n  const AddUserSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .required(t(\"firstname_required\"))\n      .noWhitespace(t(\"error.invalid_first_name\"))\n      .max(50, t(\"error.first_name_too_long\")),\n    lastName: Yup.string()\n      .required(t(\"lastname_required\"))\n      .noWhitespace(t(\"error.invalid_last_name\"))\n      .max(50, t(\"error.last_name_too_long\")),\n    email: Yup.string()\n      .required(t(\"email_required\"))\n      .matches(\n        /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/i,\n        t(\"error.invalid_email\")\n      ),\n    roles: Yup.array()\n      .required(t(\"error.roles_required\"))\n      .min(1, t(\"error.at_least_one_role\")),\n  });\n\n  const defaultValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    roles: [],\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(AddUserSchema),\n    defaultValues,\n  });\n\n  const selectedRoles = useWatch({ control: methods.control, name: \"roles\" });\n\n  const {\n    setError,\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n    setValue,\n    watch,\n  } = methods;\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(setLoading(true));\n      userService.getUser({ userId }).then((response) => {\n        dispatch(setLoading(false));\n        reset(response);\n      });\n    }\n  }, [reset, userId]);\n  const onSubmit = handleSubmit(async (data) => {\n    dispatch(setLoading(true));\n\n    const { firstName, lastName, email, roles } = data;\n    try {\n      if (userId) {\n        await userService.updateUser({\n          userId,\n          data: { email, firstName, lastName, roles },\n        });\n      } else {\n        await userService.createUser({ email, firstName, lastName, roles });\n      }\n      onClose();\n    } catch (processedError) {\n      if (processedError.name == PROCESSED_ERRORS.DUPLICATE_EMAIL.name) {\n        setError(\"email\", {\n          type: \"manual\",\n          message: t(`processed_errors.${processedError.name}`),\n        });\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  });\n\n  const OPTIONS = [\n    { value: ROLES.SUPER_ADMIN, label: t(\"label.super_admin\") },\n    { value: ROLES.SURVEY_ADMIN, label: t(\"label.survey_admin\") },\n    { value: ROLES.ANALYST, label: t(\"label.analyst\") },\n    { value: ROLES.SURVEYOR, label: t(\"label.surveyor\") },\n  ];\n\n  const isDisabled = (role, selectedRoles) => {\n    const superAdminSelected = selectedRoles.includes(ROLES.SUPER_ADMIN);\n    const surveyAdminSelected = selectedRoles.includes(ROLES.SURVEY_ADMIN);\n\n    if (superAdminSelected || surveyAdminSelected) {\n      return (\n        (superAdminSelected && role !== ROLES.SUPER_ADMIN) ||\n        (surveyAdminSelected && role !== ROLES.SURVEY_ADMIN)\n      );\n    }\n    return false;\n  };\n  useEffect(() => {\n    const superAdminSelected = selectedRoles.includes(ROLES.SUPER_ADMIN);\n    const surveyAdminSelected = selectedRoles.includes(ROLES.SURVEY_ADMIN);\n    if (superAdminSelected || surveyAdminSelected) {\n      const updatedRoles = selectedRoles.filter(\n        (role) => role === ROLES.SUPER_ADMIN || role === ROLES.SURVEY_ADMIN\n      );\n      setValue(\"roles\", updatedRoles);\n    }\n  }, [selectedRoles, setValue]);\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <Card sx={{ overflow: \"visible\" }} className={styles.createUserCard}>\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>\n          {userId ? t(\"edit_user.title\") : t(\"add_user.title\")}\n        </Typography>\n        <FormProvider methods={methods} onSubmit={onSubmit}>\n          <Stack spacing={2.5}>\n            <RHFTextField name=\"firstName\" label={t(\"label.first_name\")} />\n\n            <RHFTextField name=\"lastName\" label={t(\"label.last_name\")} />\n\n            <RHFTextField name=\"email\" label={t(\"label.email\")} />\n\n            <RHFMultiSelect\n              chip\n              checkbox\n              name=\"roles\"\n              label={t(\"add_user.roles\")}\n              options={OPTIONS}\n              isOptionDisabled={isDisabled}\n            />\n          </Stack>\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: \"1rem\",\n              justifyContent: \"flex-end\",\n              mt: \"40px\",\n            }}\n          >\n            <LoadingButton\n              onClick={() => onClose(true)}\n              color=\"inherit\"\n              size=\"large\"\n              variant=\"contained\"\n            >\n              {t(\"add_user.cancel\")}\n            </LoadingButton>\n            <LoadingButton\n              color=\"inherit\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              loading={isSubmitting}\n            >\n              {t(\"add_user.save\")}\n            </LoadingButton>\n          </Box>\n        </FormProvider>\n      </Card>\n    </Dialog>\n  );\n}\n\nexport default AddEditUser;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { PersonAdd } from \"@mui/icons-material\";\nimport {\n  Button,\n  IconButton,\n  Box,\n  Typography,\n  Popover,\n  MenuItem,\n  Divider,\n  TableSortLabel,\n} from \"@mui/material\";\nimport styles from \"./UsersTable.module.css\";\nimport { UserDelete } from \"../UserDelete\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport Iconify from \"~/components/iconify\";\nimport AddEditUser from \"~/pages/manage/AddEditUser\";\nimport { useService } from \"~/hooks/use-service\";\nimport TokenService from \"~/services/TokenService\";\n\nexport const UsersTable = () => {\n  const userService = useService(\"user\");\n\n  const { t } = useTranslation(\"manage\");\n  const [users, setUsers] = useState([]);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(null);\n  const [orderDirection, setOrderDirection] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"name\");\n  const [modalUserId, setModalUserId] = useState(null);\n  const [popoverUserId, setPopoverUserId] = useState(null);\n\n  const [deleteLoading, setDeleteLoading] = useState(false);\n\n  const userId = TokenService.getUser().id;\n\n  const getUsers = () => {\n    dispatch(setLoading(true));\n    userService\n      .getAllUsers()\n      .then((res) => {\n        if (res) {\n          setUsers(res);\n        }\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  const [userToDelete, setUserToDelete] = useState(null);\n  const onCloseModal = () => {\n    setUserToDelete(null);\n  };\n  const deleteUser = () => {\n    setDeleteLoading(true);\n    userService\n      .deleteUser({ userId: userToDelete.id })\n      .then(() => {\n        onCloseModal();\n        getUsers();\n        setDeleteLoading(false);\n      })\n      .catch((e) => {\n        setDeleteLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const handleRequestSort = (property) => {\n    const isAsc = orderBy === property && orderDirection === \"asc\";\n    setOrderDirection(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const sortFunction = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  };\n\n  const getComparator = (order, orderBy) => {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  };\n\n  const descendingComparator = (a, b, orderBy) => {\n    if (orderBy === \"name\") {\n      const nameA = `${a.firstName} ${a.lastName}`.toLowerCase();\n      const nameB = `${b.firstName} ${b.lastName}`.toLowerCase();\n      if (nameB < nameA) {\n        return -1;\n      }\n      if (nameB > nameA) {\n        return 1;\n      }\n      return 0;\n    } else {\n      if (b[orderBy] < a[orderBy]) {\n        return -1;\n      }\n      if (b[orderBy] > a[orderBy]) {\n        return 1;\n      }\n      return 0;\n    }\n  };\n\n  const sortedUsers = sortFunction(\n    users,\n    getComparator(orderDirection, orderBy)\n  );\n  const [userModal, setUserModal] = useState(false);\n  const handleOpenModal = (userId = null) => {\n    setModalUserId(userId);\n    setUserModal(true);\n  };\n  const handleEditUser = (userId) => {\n    handleOpenModal(userId);\n    setOpen(null);\n  };\n  const handleCloseModal = (prop) => {\n    setUserModal(false);\n    if (!prop) {\n      getUsers();\n    }\n  };\n\n  const handleOpen = useCallback((event, userId) => {\n    setOpen(event.currentTarget);\n    setPopoverUserId(userId);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(null);\n    setPopoverUserId(null);\n  }, []);\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"h5\" sx={{ mb: 3 }}>\n          {t(\"users_manage.users\")}\n        </Typography>\n        <Button className={styles.addUser} onClick={() => handleOpenModal()}>\n          <PersonAdd />\n          {t(\"users_manage.add_user\")}\n        </Button>\n      </Box>\n\n      <TableContainer\n        sx={{\n          overflow: \"unset\",\n          [`& .${tableCellClasses.head}`]: {\n            color: \"text.primary\",\n          },\n          [`& .${tableCellClasses.root}`]: {\n            bgcolor: \"background.default\",\n            borderBottomColor: (theme) => theme.palette.divider,\n          },\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">\n                <TableSortLabel\n                  active={orderBy === \"name\"}\n                  direction={orderBy === \"name\" ? orderDirection : \"asc\"}\n                  onClick={() => handleRequestSort(\"name\")}\n                >\n                  {t(\"users_manage.name\")}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"left\">\n                <TableSortLabel\n                  active={orderBy === \"email\"}\n                  direction={orderBy === \"email\" ? orderDirection : \"asc\"}\n                  onClick={() => handleRequestSort(\"email\")}\n                >\n                  {t(\"users_manage.email\")}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"left\">\n                <TableSortLabel\n                  active={orderBy === \"roles\"}\n                  direction={orderBy === \"roles\" ? orderDirection : \"asc\"}\n                  onClick={() => handleRequestSort(\"roles\")}\n                >\n                  {t(\"users_manage.roles\")}\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"left\">\n                <TableSortLabel\n                  active={orderBy === \"status\"}\n                  direction={orderBy === \"status\" ? orderDirection : \"asc\"}\n                  onClick={() => handleRequestSort(\"status\")}\n                >\n                  {t(\"users_manage.status\")}\n                </TableSortLabel>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedUsers.map((user) => {\n              const disabled = !user.isConfirmed || user.id === userId;\n              return (\n                <React.Fragment key={user.id}>\n                  <TableRow key={user.id}>\n                    <TableCell align=\"left\">\n                      {user.firstName} {user.lastName}\n                    </TableCell>\n                    <TableCell align=\"left\">{user.email}</TableCell>\n                    <TableCell align=\"left\">\n                      {user.roles.map((role) => t(`label.${role}`)).join(\", \")}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {user.isConfirmed\n                        ? t(\"users_manage.active\")\n                        : t(\"users_manage.invitation_sent\")}\n                    </TableCell>\n                    <TableCell align=\"right\" padding=\"none\">\n                      {!disabled && (\n                        <IconButton\n                          onClick={(event) => handleOpen(event, user.id)}\n                        >\n                          <Iconify icon=\"carbon:overflow-menu-vertical\" />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                  <Popover\n                    open={Boolean(open) && popoverUserId === user.id}\n                    anchorEl={open}\n                    onClose={handleClose}\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                    transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                    slotProps={{\n                      paper: {\n                        sx: { width: 160 },\n                      },\n                    }}\n                  >\n                    <MenuItem\n                      onClick={() => {\n                        handleEditUser(user.id);\n                      }}\n                    >\n                      <Iconify icon=\"carbon:edit\" sx={{ mr: 1 }} />{\" \"}\n                      {t(\"users_manage.title_edit\")}\n                    </MenuItem>\n\n                    <Divider sx={{ borderStyle: \"dashed\", mt: 0.5 }} />\n\n                    <MenuItem\n                      onClick={() => {\n                        setOpen(null);\n                        setUserToDelete(user);\n                      }}\n                      sx={{ color: \"error.main\" }}\n                    >\n                      <Iconify icon=\"carbon:trash-can\" sx={{ mr: 1 }} />{\" \"}\n                      {t(\"users_manage.title_delete\")}\n                    </MenuItem>\n                  </Popover>\n                </React.Fragment>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {Boolean(userToDelete) && (\n        <UserDelete\n          deleteUser={deleteUser}\n          name={userToDelete.firstName + \" \" + userToDelete.lastName}\n          open={Boolean(userToDelete)}\n          onClose={onCloseModal}\n          isLoading={deleteLoading}\n        />\n      )}\n\n      {userModal && (\n        <AddEditUser\n          userId={modalUserId}\n          open={userModal}\n          onClose={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport styles from \"./ManageUsers.module.css\";\nimport { UsersTable } from \"~/components/users/UsersTable\";\n\nfunction ManageUsers() {\n  return (\n    <Box className={styles.mainContainer}>\n      <UsersTable />\n    </Box>\n  );\n}\n\nexport default ManageUsers;\n"],"names":["_jsx","styles","React.forwardRef","TableSortLabel","_jsxs","jsx","jsxs","Yup.addMethod","Yup.string","Yup.object","Yup.array","yupResolver","useEffect","selectedRoles","useState","orderBy","userId","useCallback","Fragment"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}