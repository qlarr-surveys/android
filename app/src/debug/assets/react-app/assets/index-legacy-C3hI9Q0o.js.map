{"version":3,"file":"index-legacy-C3hI9Q0o.js","sources":["../../src/components/manage/SuccessSnackbar/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Alert, Snackbar } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nexport default function SuccessSnackbar({ success, left }) {\n  const [open, setOpen] = useState(true);\n  const [dir, setDir] = useState(\"ltr\");\n  const { t, i18n } = useTranslation(\"manage\");\n\n  useEffect(() => {\n    if (rtlLanguage.includes(i18n.language)) {\n      setDir(\"rtl\");\n    } else {\n      setDir(\"ltr\");\n    }\n\n    const timer = setTimeout(() => {\n      setOpen(false);\n    }, 2000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [i18n.language]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={2000}\n      onClose={handleClose}\n      sx={{ left: `${left}px !important` }}\n    >\n      <Alert variant=\"standard\" severity=\"success\" onClose={handleClose} dir={dir}>\n        {t(`processed_successes.${success}`)}\n      </Alert>\n    </Snackbar>\n  );\n}\n"],"names":["SuccessSnackbar","success","left","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","open","setOpen","_reactExports$useStat3","_reactExports$useStat4","dir","setDir","_useTranslation","useTranslation","t","i18n","useEffect","rtlLanguage","includes","language","timer","setTimeout","clearTimeout","handleClose","jsx","Snackbar","autoHideDuration","onClose","sx","children","Alert","variant","severity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;QAKA,SAAwBA,eAAgBA,CAAA;UAAEC,OAAS;UAAAC;SAAQ,EAAA;UACzD,MAAAC,qBAAA,GAAwBC,sBAAS,IAAI,CAAA;YAAAC,sBAAA,GAAAC,cAAA,CAAAH,qBAAA;YAA9BI,IAAA,GAAAF,sBAAA;YAAMG,OAAO,GAAAH,sBAAA;UACpB,MAAAI,sBAAA,GAAsBL,sBAAS,KAAK,CAAA;YAAAM,sBAAA,GAAAJ,cAAA,CAAAG,sBAAA;YAA7BE,GAAA,GAAAD,sBAAA;YAAKE,MAAM,GAAAF,sBAAA;UAClB,MAAAG,eAAA,GAAoBC,eAAe,QAAQ,CAAA;YAAnCC,CAAA,GAAAF,eAAA,CAAAE,CAAA;YAAGC,IAAK,GAAAH,eAAA,CAALG,IAAK;UAEhBC,YAAAA,CAAAA,SAAA,CAAU,MAAM;YACd,IAAIC,WAAY,CAAAC,QAAA,CAASH,IAAK,CAAAI,QAAQ,CAAG,EAAA;cACvCR,MAAA,CAAO,KAAK,CAAA;YAAA,CACP,MAAA;cACLA,MAAA,CAAO,KAAK,CAAA;YACd;YAEM,MAAAS,KAAA,GAAQC,WAAW,MAAM;cAC7Bd,OAAA,CAAQ,KAAK,CAAA;eACZ,GAAI,CAAA;YAEP,OAAO,MAAM;cACXe,YAAA,CAAaF,KAAK,CAAA;YAAA,CACpB;UAAA,CACC,EAAA,CAACL,IAAK,CAAAI,QAAQ,CAAC,CAAA;UAElB,MAAMI,cAAcA,CAAA,KAAM;YACxBhB,OAAA,CAAQ,KAAK,CAAA;UAAA,CACf;UAGE,sBAAAiB,iBAAA,CAAAA,GAAA,CAACC,QAAA,EAAA;YACCnB,IAAA;YACAoB,gBAAkB,EAAA,GAAA;YAClBC,OAAS,EAAAJ,WAAA;YACTK,EAAI,EAAA;cAAE3B,IAAM,EAAA,GAAGA,IAAI;YAAgB,CAAA;YAEnC4B,QAAC,EAAA,eAAAL,iBAAA,CAAAA,GAAA,CAAAM,KAAA,EAAA;cAAMC,OAAQ,EAAA,UAAA;cAAWC,QAAS,EAAA,SAAA;cAAUL,OAAS,EAAAJ,WAAA;cAAab,GAChE;cAAAmB,QAAA,EAAAf,CAAA,CAAE,uBAAuBd,OAAO,EAAE;aACrC;UAAA,CAAA,CACF;QAEJ;;;;"}