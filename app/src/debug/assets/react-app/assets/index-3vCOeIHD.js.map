{"version":3,"file":"index-3vCOeIHD.js","sources":["../../node_modules/@mui/icons-material/esm/ArrowOutward.js","../../src/components/manage/ResponseDelete/index.jsx","../../node_modules/file-saver/dist/FileSaver.min.js","../../src/pages/manage/ResponsesSurvey/index.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 6v2h8.59L5 17.59 6.41 19 16 9.41V18h2V6z\"\n}), 'ArrowOutward');","import { Box, Modal, Typography, Button } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport styles from \"./ResponseDelete.module.css\";\n\nexport const ResponseDelete = ({ open, onClose, onDelete }) => {\n  const { t } = useTranslation(\"manage\");\n  return (\n    <Modal\n      sx={{\n        \".MuiBackdrop-root\": {\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        },\n      }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles.wrapper}>\n        <Typography variant=\"h5\" fontWeight={600}>\n          {t(\"responses.title_delete_response\")}\n        </Typography>\n        <Box className={styles.separator}></Box>\n        <Box className={styles.action}>\n          <Button onClick={onClose} color=\"primary\" variant=\"contained\">\n            {t(\"action_btn.cancel\")}\n          </Button>\n          <Button variant=\"secondary\" onClick={onDelete}>\n            {t(\"action_btn.delete\")}\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport {\n  TablePagination,\n  IconButton,\n  Button,\n  Typography,\n  Tabs,\n  Tab,\n  Tooltip,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport styles from \"./ResponsesSurvey.module.css\";\nimport {\n  formatlocalDateTime,\n  serverDateTimeToLocalDateTime,\n} from \"~/utils/DateUtils\";\nimport { previewUrl } from \"~/networking/run\";\nimport { ResponseDelete } from \"~/components/manage/ResponseDelete\";\nimport FileSaver from \"file-saver\";\nimport { stripTags, truncateWithEllipsis } from \"~/utils/design/utils\";\nimport { RHFSwitch } from \"~/components/hook-form\";\nimport { ArrowOutward } from \"@mui/icons-material\";\nimport LoadingDots from \"~/components/common/LoadingDots\";\nimport { useService } from \"~/hooks/use-service\";\nimport CustomTooltip from \"~/components/common/Tooltip/Tooltip\";\n\nfunction ResponsesSurvey({ viewEvents }) {\n  const surveyService = useService(\"survey\");\n\n  const { t } = useTranslation(\"manage\");\n  const [fetching, setFetching] = useState(true);\n\n  const [dbResponses, setDbResponses] = useState(false);\n  const [completeResponses, setCompleteResponses] = useState(\"none\");\n  const [surveyor, setSurveyor] = useState(null);\n\n  const { surveyId } = useParams();\n\n  const processApirror = (e) => {\n    setFetching(false);\n  };\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const [allResponse, setAllResponse] = useState(null);\n\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const exportResponses = () => {\n    setFetching(true);\n    surveyService\n      .exportResponses(surveyId, timezone, dbResponses, completeResponses)\n      .then((data) => {\n        if (data) {\n          var file = new File([data], `${surveyId}-responses-export.csv`, {\n            type: \"text/csv;charset=utf-8\",\n          });\n          FileSaver.saveAs(file);\n        }\n        setFetching(false);\n      })\n      .catch((err) => {\n        processApirror(err);\n      });\n  };\n\n  const onSurveyorClicked = (response) => {\n    setCompleteResponses(\"none\");\n    setSurveyor(response.surveyorID);\n  };\n\n  const findBoolean = (response) => {\n    switch (response) {\n      case \"true\":\n        return true;\n      case \"false\":\n        return false;\n      case \"none\":\n      default:\n        return undefined;\n    }\n  };\n\n  const fetchResponses = (deleted = false) => {\n    setFetching(true);\n    const updateCompleteResponses = findBoolean(completeResponses);\n\n    surveyService\n      .allResponse(\n        surveyId,\n        dbResponses,\n        page,\n        rowsPerPage,\n        updateCompleteResponses,\n        surveyor\n      )\n      .then((data) => {\n        if (data) {\n          const updatedTotalCount = data.totalCount;\n          const totalPages = Math.ceil(updatedTotalCount / rowsPerPage);\n          const newPage = page > totalPages ? totalPages : page;\n          if (deleted && page > totalPages) {\n            setPage(newPage + 1);\n          }\n          setAllResponse(data);\n        }\n        setFetching(false);\n      })\n      .catch((err) => {\n        processApirror(err);\n        setFetching(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchResponses();\n  }, [page, rowsPerPage, dbResponses, completeResponses, surveyor]);\n\n  const [responseToDelete, setResponseToDelete] = useState();\n  const onCloseModal = () => {\n    setResponseToDelete(null);\n  };\n\n  const deleteResponse = () => {\n    onCloseModal();\n    surveyService\n      .deleteResponse(surveyId, responseToDelete.id)\n      .then(() => {\n        fetchResponses(true);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n  const tabValues = {\n    SHOW_ALL: \"none\",\n    SHOW_COMPLETED: \"true\",\n    SHOW_INCOMPLETE: \"false\",\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        display=\"flex\"\n        flexWrap={{ xs: \"wrap\", sm: \"wrap\", md: \"nowrap\" }}\n        gap={10}\n      >\n        <Box width=\"100%\" className={styles.cardContent}>\n          <Typography variant=\"h5\" color=\"primary\" fontWeight={600}>\n            {t(\"responses.raw_values\")}\n          </Typography>\n          <RHFSwitch\n            checked={dbResponses}\n            onChange={(event) => {\n              setDbResponses(event.target.checked);\n            }}\n          />\n        </Box>\n        <Box width=\"100%\" className={styles.cardContent}>\n          <Typography variant=\"h5\" color=\"primary\" fontWeight={600}>\n            {t(\"responses.export\")}\n          </Typography>\n          <Button\n            sx={{ minWidth: \"50px\" }}\n            color=\"primary\"\n            disabled={surveyor || false}\n            size=\"small\"\n            variant=\"contained\"\n            onClick={() => exportResponses()}\n          >\n            <ArrowOutward />\n          </Button>\n        </Box>\n      </Box>\n\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        sx={{ borderBottom: 1, borderColor: \"divider\" }}\n      >\n        <Typography\n          color=\"primary\"\n          variant=\"h4\"\n          fontWeight={600}\n          sx={{ width: \"33%\" }}\n        >\n          {t(\"responses.filter_completed\")}\n        </Typography>\n        <Tabs\n          sx={{ width: \"100%\" }}\n          value={completeResponses}\n          onChange={(event, newValue) => {\n            setPage(1);\n            setCompleteResponses(newValue);\n          }}\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab\n            disabled={surveyor || false}\n            label={t(\"responses.filter_completed_show_all\")}\n            value={tabValues.SHOW_ALL}\n          />\n          <Tab\n            disabled={surveyor || false}\n            label={t(\"responses.filter_completed_show_completed\")}\n            value={tabValues.SHOW_COMPLETED}\n          />\n          <Tab\n            disabled={surveyor || false}\n            label={t(\"responses.filter_completed_show_incomplete\")}\n            value={tabValues.SHOW_INCOMPLETE}\n          />\n        </Tabs>\n      </Box>\n\n      {surveyor && (\n        <>\n          <br />\n          <Button sx={{ margin: \"8px\" }} onClick={() => setSurveyor(null)}>\n            {t(\"responses.reset_surveyor_filter\")}\n          </Button>\n        </>\n      )}\n      {fetching ? (\n        <div className={styles.loadingWrapper}>\n          <LoadingDots />\n        </div>\n      ) : (\n        <Paper sx={{ width: \"100%\", background: \"transparent\", mb: 2 }}>\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                {allResponse && (\n                  <TableRow>\n                    <TableCell key=\"btns\" />\n                    <TableCell key=\"id\" align=\"left\">\n                      ID\n                    </TableCell>\n\n                    <TableCell key=\"surveyor\" align=\"left\">\n                      {t(\"label.surveyor\")}\n                    </TableCell>\n\n                    <TableCell key=\"ip\" align=\"left\">\n                      {t(\"responses.ip_addr\")}\n                    </TableCell>\n                    <TableCell key=\"start_date\" align=\"left\">\n                      {t(\"responses.start_date\")}\n                    </TableCell>\n                    <TableCell key=\"submit_date\" align=\"left\">\n                      {t(\"responses.submit_date\")}\n                    </TableCell>\n                    <TableCell key=\"lang\" align=\"left\">\n                      {t(\"responses.lang\")}\n                    </TableCell>\n\n                    {Object.values(allResponse?.columnNames).map((label) => {\n                      return (\n                        <TableCell key={label} align=\"left\">\n                          {stripTags(label)}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                )}\n              </TableHead>\n              <TableBody>\n                {allResponse?.responses.map((response) => {\n                  return (\n                    <TableRow key={response.id} sx={{ minHeight: \"100px\" }}>\n                      <TableCell key=\"btns\" align=\"left\">\n                        <Box sx={{ display: \"flex\" }}>\n                          <IconButton\n                            onClick={() => {\n                              setResponseToDelete(response);\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Box>\n                      </TableCell>\n                      <TableCell key=\"id\" align=\"left\">\n                        {response.index}\n                      </TableCell>\n\n                      <TableCell key=\"surveyor\" align=\"left\">\n                        {response.surveyorName ? (\n                          <Link\n                            onClick={() => {\n                              onSurveyorClicked(response);\n                            }}\n                          >\n                            {response.surveyorName}\n                          </Link>\n                        ) : (\n                          \"\"\n                        )}\n                      </TableCell>\n\n                      <TableCell key=\"ip\" align=\"left\">\n                        {response.ipAddress}\n                      </TableCell>\n                      <TableCell key=\"startDate\" align=\"left\">\n                        {formatlocalDateTime(\n                          serverDateTimeToLocalDateTime(response.startDate)\n                        )}\n                      </TableCell>\n                      <TableCell key=\"submitDate\" align=\"left\">\n                        {response.submitDate\n                          ? formatlocalDateTime(\n                              serverDateTimeToLocalDateTime(response.submitDate)\n                            )\n                          : \" - \"}\n                      </TableCell>\n                      <TableCell key=\"lang\" align=\"left\">\n                        {response.lang}\n                      </TableCell>\n                      {Object.keys(response.values).map((key) => {\n                        const value = response.values[key];\n                        return (\n                          <TableCell align=\"left\" key={key}>\n                            {value === null ||\n                            value === undefined ||\n                            value === \"\" ? (\n                              \" - \"\n                            ) : typeof value === \"string\" ? (\n                              <CustomTooltip showIcon={false} title={value}>\n                                <span>{truncateWithEllipsis(value, 25)}</span>\n                              </CustomTooltip>\n                            ) : typeof value === \"object\" &&\n                              \"size\" in value &&\n                              \"filename\" in value &&\n                              \"stored_filename\" in value ? (\n                              <a\n                                target=\"_blank\"\n                                download={value.stored_filename}\n                                href={previewUrl(\n                                  response.id,\n                                  key.split(\".\")[0]\n                                )}\n                              >\n                                {value.filename} -\n                                {Math.round(value.size / 1000) + \"K\"}\n                              </a>\n                            ) : (\n                              JSON.stringify(value)\n                            )}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50, 100]}\n            component=\"div\"\n            labelDisplayedRows={({ from, to, count, page }) => {\n              return t(\"responses.label_displayed_rows\", { from, to, count });\n            }}\n            labelRowsPerPage={t(\"responses.label_rows_per_page\")}\n            count={allResponse?.totalCount}\n            rowsPerPage={rowsPerPage}\n            page={page - 1}\n            onPageChange={(event, newPage) => {\n              setPage(newPage + 1);\n            }}\n            onRowsPerPageChange={(event) => {\n              setRowsPerPage(parseInt(event.target.value, 10));\n              setPage(1);\n            }}\n          />\n        </Paper>\n      )}\n      {Boolean(responseToDelete) && (\n        <ResponseDelete\n          onDelete={deleteResponse}\n          open={Boolean(responseToDelete)}\n          onClose={onCloseModal}\n        />\n      )}\n    </Box>\n  );\n}\n\nexport default React.memo(ResponsesSurvey);\n"],"names":["_jsx","open","jsx","jsxs","this","a","b","c","d","global","g","f","e","useState","useEffect","styles","Fragment","DeleteIcon","page"],"mappings":"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","x_google_ignoreList":[0,2]}