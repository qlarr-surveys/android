{"version":3,"file":"NumberQuestion-legacy-CZTy0hpF.js","sources":["../../src/components/Questions/Number/NumberQuestion.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\nimport styles from \"./NumberQuestion.module.css\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\n\nfunction NumberQuestion(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    let validity = questionState?.validity;\n    let invalid = (show_errors || isDirty) && validity === false;\n    return {\n      value: questionState?.value,\n      invalid: invalid,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const cleanupValue = (oldValue, newValue) => {\n    const regex =\n      props.component.decimal_separator == \".\"\n        ? /^[0-9]+\\.?[0-9]*$/\n        : props.component.decimal_separator == \",\"\n          ? /^[0-9]+,?[0-9]*$/\n          : /^[0-9]*$/;\n    if (newValue == \"\") {\n      return undefined;\n    }\n    if (regex.test(newValue)) {\n      let withDecimal = convertToDecimal(newValue)\n      let processed = +withDecimal;\n      let returning = isNaN(processed) ? oldValue : withDecimal;\n      return returning;\n    } else {\n      return oldValue;\n    }\n  };\n\n  const convertToDecimal = (value) => {\n    if (props.component.decimal_separator != \",\") {\n      return value;\n    }\n    let stringValue = value.toString();\n    return stringValue.replace(\",\", \".\");\n  };\n\n  const formatValue = (value) => {\n    return value === undefined\n      ? \"\"\n      : props.component.decimal_separator == \",\"\n        ? value.toString().replace(\".\", \",\")\n        : value;\n  };\n\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: cleanupValue(state.value, event.target.value),\n      })\n    );\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n    let processed = +state.value;\n    if (!isNaN(processed)) {\n      dispatch(\n        valueChange({\n          componentCode: props.component.qualifiedCode,\n          value: processed,\n        })\n      );\n    }\n  };\n\n  return (\n    <div className={styles.questionItem}>\n      <TextField\n        variant=\"outlined\"\n        required={\n          props.component.validation?.validation_required?.isActive\n            ? true\n            : false\n        }\n        size=\"small\"\n        id={props.component.qualifiedCode}\n        name={props.component.qualifiedCode}\n        label={(props.component.showHint && props.component.content?.hint )|| \"\"}\n        onChange={handleChange}\n        onBlur={lostFocus}\n        inputProps={{ maxLength: props.component.maxChars || undefined }}\n        value={formatValue(state.value)}\n        error={state.invalid}\n        InputProps={{\n          sx: {\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default NumberQuestion;\n"],"names":["NumberQuestion","props","_props$component$vali","_props$component$cont","theme","useTheme","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","validity","invalid","value","shallowEqual","dispatch","useDispatch","cleanupValue","oldValue","newValue","regex","decimal_separator","test","withDecimal","convertToDecimal","processed","returning","isNaN","stringValue","toString","replace","formatValue","handleChange","event","valueChange","componentCode","target","name","lostFocus","setDirty","jsx","className","styles","questionItem","children","TextField","variant","required","validation","validation_required","isActive","size","id","label","showHint","content","hint","onChange","onBlur","inputProps","maxLength","maxChars","error","InputProps","sx","fontFamily","textStyles","text","font","color","fontSize"],"mappings":"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"}