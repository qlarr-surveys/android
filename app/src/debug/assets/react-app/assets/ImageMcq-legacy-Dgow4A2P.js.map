{"version":3,"file":"ImageMcq-legacy-Dgow4A2P.js","sources":["../../src/components/Questions/ImageMcq/ImageMcq.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Card, Checkbox, Grid } from \"@mui/material\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport styles from \"./ImageMcq.module.css\";\nimport { setDirty } from \"~/state/templateState\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageMcq(props) {\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing}px`,\n        justifyContent: isRtl ? \"flex-end\" : \"flex-start\",\n      }}\n      className={styles.imageFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        return (\n          <ImageMcqItem\n            option={option}\n            aspectRatio={props.component.imageAspectRatio}\n            columns={props.component.columns || 64}\n            spacing={props.component.spacing || 8}\n            hideText={props.component.hideText}\n            parentCode={props.component.qualifiedCode}\n            key={option.qualifiedCode}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nfunction ImageMcqItem(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let answerState = state.runState.values[props.option.qualifiedCode];\n    return {\n      showAnswer:\n        typeof answerState?.relevance == \"undefined\" || answerState.relevance,\n      checked: answerState?.value || false,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n    dispatch(setDirty(componentCode));\n    dispatch(setDirty(props.parentCode));\n  };\n  const backgroundImage = props.option.resources?.image\n    ? `url('${buildResourceUrl(props.option.resources?.image)}')`\n    : \"0\";\n\n  return (\n    <Box\n      key={props.option.code}\n      sx={{\n        flex: `0 1 calc(${100 / props.columns}% - ${props.spacing}px)`,\n        cursor: \"pointer\",\n      }}\n    >\n      <Box\n        className={styles.imageContainer}\n        onClick={() => handleChange(props.option.qualifiedCode, !state.checked)}\n        style={{\n          paddingTop: 100 / props.aspectRatio + \"%\",\n          backgroundImage: backgroundImage,\n          backgroundColor: theme.palette.background.default,\n          borderRadius: \"4px\",\n          border: state.checked\n            ? `2px solid ${theme.palette.primary.main}`\n            : \"2px solid transparent\",\n\n        }}\n      >\n        <div className={styles.selection}>\n          <Checkbox\n            onChange={(event) =>\n              handleChange(props.option.qualifiedCode, !state.checked)\n            }\n            className={styles.radioCheck}\n            checked={state.checked}\n          />\n        </div>\n      </Box>\n      {!props.hideText && (\n        <Box\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {props.option.content?.label}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default ImageMcq;\n"],"names":["ImageMcq","props","lang","useSelector","state","runState","values","isRtl","rtlLanguage","includes","jsx","Box","sx","gap","component","spacing","justifyContent","className","styles","imageFlexContainer","children","answers","map","option","ImageMcqItem","aspectRatio","imageAspectRatio","columns","hideText","parentCode","qualifiedCode","_props$option$resourc","_props$option$resourc2","_props$option$content","theme","useTheme","answerState","showAnswer","relevance","checked","value","shallowEqual","dispatch","useDispatch","handleChange","componentCode","valueChange","setDirty","backgroundImage","resources","image","buildResourceUrl","jsxs","flex","cursor","imageContainer","onClick","style","paddingTop","backgroundColor","palette","background","default","borderRadius","border","primary","main","selection","Checkbox","onChange","event","radioCheck","fontFamily","textStyles","text","font","color","fontSize","size","content","label","code"],"mappings":"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"}