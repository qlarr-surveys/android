{"version":3,"file":"Mcq-legacy-DA9tMHcz.js","sources":["../../src/components/Questions/Mcq/MCQAnswer.jsx","../../src/components/Questions/Mcq/Mcq.jsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport Content from \"~/components/run/Content\";\n\nfunction McqAnswer(props) {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const relevance = useSelector((state) => {\n    let answerState = state.runState.values[props.Answer?.qualifiedCode];\n    return (\n      typeof answerState?.relevance == \"undefined\" || answerState.relevance\n    );\n  }, shallowEqual);\n\n  const parentValue = useSelector((state) => {\n    return state.runState.values[props.parentCode].value || [];\n  }, shallowEqual);\n\n  \n  const handleChange = (event) => {\n    let value = [...parentValue];\n    if (event.target.checked) {\n      value.push(props.Answer.code);\n    } else {\n      value = value.filter((el) => el !== props.Answer.code);\n    }\n    dispatch(\n      valueChange({\n        componentCode: props.parentCode,\n        value: value,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n  };\n\n\n  return relevance ? (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={parentValue.indexOf(props.Answer.code) > -1}\n          onChange={handleChange}\n          name={props.Answer.qualifiedCode}\n          sx={{\n            color: theme.textStyles.text.color,\n          }}\n        />\n      }\n      label={\n        <Content\n          elementCode={props.Answer.code}\n          fontFamily={theme.textStyles.text.font}\n          color={theme.textStyles.text.color}\n          fontSize={theme.textStyles.text.size}\n          name=\"label\"\n          lang={props.lang}\n          content={props.Answer.content?.label}\n        />\n      }\n    />\n  ) : (\n    \"\"\n  );\n}\n\nexport default memo(McqAnswer);\n","import FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/RadioGroup\";\n\nimport React, { memo, useRef } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Validation from \"~/components/run/Validation\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport MCQAnswer from \"./MCQAnswer\";\n\nfunction MCQ(props) {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        {props.component.answers.map((option) => {\n          if (option.type === \"other\") {\n            return (\n              <McqAnswerOther\n                key={option.qualifiedCode}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          } else {\n            return (\n              <MCQAnswer\n                lang={props.lang}\n                key={option.qualifiedCode}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          }\n        })}\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nfunction McqAnswerOther(props) {\n  const theme = useTheme();\n  const nestedTextChild = props.Answer.answers[0];\n  const parentValue = useSelector((state) => {\n    return state.runState.values[props.parentCode].value || [];\n  }, shallowEqual);\n  const isSelected = parentValue.indexOf(props.Answer.code) > -1;\n  const state = useSelector((state) => {\n    let own = state.runState.values[props.Answer.qualifiedCode];\n    let textChild = state.runState.values[nestedTextChild.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isChildDirty = state.templateState[nestedTextChild.qualifiedCode];\n    return {\n      showAnswer: typeof own?.relevance === \"undefined\" || own.relevance,\n      childInvalid:\n        (show_errors || isChildDirty) &&\n        textChild?.relevance === true &&\n        textChild?.validity === false,\n      textValue: textChild?.value || \"\",\n      textRelevance: state.textChild?.relevance,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const onButtonClick = (event) => {\n    let value = [...parentValue];\n    if (event.target.checked) {\n      value.push(props.Answer.code);\n    } else {\n      value = value.filter((el) => el !== props.Answer.code);\n    }\n    dispatch(\n      valueChange({\n        componentCode: props.parentCode,\n        value: value,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n    if (event.target.checked) {\n      textInput.current.focus();\n    }\n  };\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const textInput = useRef();\n  const handleFocus = (event) => {\n    let value = [...parentValue];\n    if (value.indexOf(props.Answer.code) == -1) {\n      value.push(props.Answer.code);\n      dispatch(\n        valueChange({ componentCode: props.parentCode, value: value })\n      );\n    }\n    \n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n  };\n\n  const showAnswer = () => {\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isSelected}\n            onChange={onButtonClick}\n            name={props.Answer.qualifiedCode}\n            sx={{\n              color: theme.textStyles.text.color,\n            }}\n          />\n        }\n        label={\n          <div className=\"w-100\">\n            <TextField\n              variant=\"standard\"\n              required={\n                state.textRelevance && nestedTextChild.validation?.required\n              }\n              inputRef={textInput}\n              id={nestedTextChild.qualifiedCode}\n              name={nestedTextChild.qualifiedCode}\n              label={props.Answer.content?.label}\n              onChange={handleChange}\n              onFocus={handleFocus}\n              onBlur={lostFocus}\n              sx={{\n                label: { color: theme.textStyles.text.color },\n              }}\n              value={state.textValue}\n              InputProps={{\n                sx: {\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                },\n              }}\n              helperText={\n                state.childInvalid ? (\n                  <Validation component={nestedTextChild} limit={1} />\n                ) : (\n                  \"\"\n                )\n              }\n            />\n          </div>\n        }\n      />\n    );\n  };\n\n  return state.showAnswer ? showAnswer() : \"\";\n}\n\nexport default memo(MCQ);\n"],"names":["McqAnswer","props","_props$Answer$content","theme","useTheme","dispatch","useDispatch","relevance","useSelector","state","_props$Answer","answerState","runState","values","Answer","qualifiedCode","shallowEqual","parentValue","parentCode","value","handleChange","event","target","checked","push","code","filter","el","valueChange","componentCode","setDirty","name","jsx","FormControlLabel","control","Checkbox","indexOf","onChange","sx","color","textStyles","text","label","Content","elementCode","fontFamily","font","fontSize","size","lang","content","MCQAnswer","memo","MCQ","FormControl","component","children","FormGroup","answers","map","option","type","McqAnswerOther","nestedTextChild","isSelected","_state2$textChild","own","textChild","show_errors","Survey","isChildDirty","templateState","showAnswer","childInvalid","validity","textValue","textRelevance","onButtonClick","textInput","current","focus","useRef","handleFocus","lostFocus","_nestedTextChild$vali","_props$Answer$content2","className","TextField","variant","required","validation","inputRef","id","onFocus","onBlur","InputProps","helperText","Validation","limit","Mcq","exports"],"mappings":"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"}