{"version":3,"file":"index-BEtCyJ-3.js","sources":["../../src/components/common/SuccessMessage/SuccessMessage.jsx","../../src/pages/manage/ForgotPassword/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { Check } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./SuccessMessage.module.css\";\nconst SuccessMessage = ({ message, t }) => {\n  const navigate = useNavigate();\n  return (\n    <Box className={styles.successText}>\n      <Box className={styles.iconContainer}>\n        <Check\n          sx={{\n            fontSize: \"40px\",\n            color: \"#32CD32\",\n            stroke: \"#32CD32\",\n            strokeWidth: 1,\n          }}\n        />\n      </Box>\n      <Box>\n        <Typography variant=\"h4\" color=\"primary\">\n          {t(\"email.check\")}\n        </Typography>\n        <Typography variant=\"body1\" mt={1} color=\"textSecondary\">\n          {t(`${message}`)}\n        </Typography>\n      </Box>\n      <Button\n        onClick={() => {\n          navigate(\"/login\");\n        }}\n        fullWidth\n        size=\"large\"\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        {t(\"login.login\")}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SuccessMessage;\n","import * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport Link from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport RouterLink from \"~/components/router/router-link\";\nimport Iconify from \"~/components/iconify\";\nimport Image from \"~/components/image/image\";\nimport FormProvider, { RHFTextField } from \"../../../components/hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport { routes } from \"~/routes\";\nimport { useNavigate } from \"react-router-dom\";\nimport SuccessMessage from \"~/components/common/SuccessMessage/SuccessMessage\";\nimport { useService } from \"~/hooks/use-service\";\n// ----------------------------------------------------------------------\n\nexport default function ForgotPasswordView() {\n  const authService = useService(\"auth\");\n\n  const { t } = useTranslation(\"manage\");\n  const [isSuccess, setSuccess] = useState(false);\n  const dispatch = useDispatch();\n  const ForgotPasswordSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(t(\"email_required\"))\n      .matches(\n        /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/i,\n        t(\"error.invalid_email\")\n      ),\n  });\n\n  const defaultValues = {\n    email: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ForgotPasswordSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      dispatch(setLoading(true));\n      await authService.forgotPassword(data.email);\n      setSuccess(true);\n    } catch (e) {\n    } finally {\n      dispatch(setLoading(false));\n    }\n  });\n\n  return (\n    <>\n      {isSuccess ? (\n        <SuccessMessage t={t} message=\"forgot_password.success\" />\n      ) : (\n        <Stack sx={{ textAlign: \"center\" }}>\n          <Image\n            alt=\"reset password\"\n            src=\"/ic_lock_password.svg\"\n            sx={{ mb: 5, width: 96, height: 96, mx: \"auto\" }}\n          />\n\n          <Typography variant=\"h3\" paragraph>\n            {t(\"forgot_password.title\")}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\" mb={5}>\n            {t(\"forgot_password.helper_text\")}\n          </Typography>\n\n          <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n            <RHFTextField\n              name=\"email\"\n              hiddenLabel\n              placeholder={t(\"label.email\")}\n            />\n\n            <LoadingButton\n              fullWidth\n              size=\"large\"\n              color=\"primary\"\n              type=\"submit\"\n              variant=\"contained\"\n              loading={isSubmitting}\n              sx={{ mt: 2.5 }}\n            >\n              {t(\"forgot_password.send\")}\n            </LoadingButton>\n          </FormProvider>\n\n          <Link\n            component={RouterLink}\n            href={routes.login}\n            color=\"inherit\"\n            variant=\"subtitle2\"\n            sx={{\n              mt: 3,\n              mx: \"auto\",\n              alignItems: \"center\",\n              display: \"inline-flex\",\n            }}\n          >\n            <Iconify icon=\"carbon:chevron-left\" width={16} sx={{ mr: 1 }} />\n            {t(\"forgot_password.return_to_signin\")}\n          </Link>\n        </Stack>\n      )}\n    </>\n  );\n}\n"],"names":["jsxs","jsx","useState","Yup.object","Yup.string","yupResolver","Fragment"],"mappings":"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"}