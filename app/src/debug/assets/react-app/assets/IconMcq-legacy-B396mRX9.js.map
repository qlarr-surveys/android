{"version":3,"file":"IconMcq-legacy-B396mRX9.js","sources":["../../src/components/Questions/IconMcq/IconMcq.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./IconMcq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box } from \"@mui/material\";\nimport DynamicSvg from \"~/components/DynamicSvg\";\nimport { buildResourceUrl } from \"~/networking/common\";\n\nfunction IconMcq(props) {\n  const theme = useTheme();\n\n  const parentValue = useSelector((state) => {\n    return state.runState.values[props.component.qualifiedCode].value || [];\n  }, shallowEqual);\n\n\n\n  const hideText = props.component?.hideText || false;\n\n  const runValues = useSelector((s) => s.runState.values);\n\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing || 8}px`,\n      }}\n      className={styles.iconFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        const relevance = runValues[option.qualifiedCode]?.relevance ?? true;\n        if (!relevance) return null;\n\n        return (\n          <IconMcqChoice\n            key={option.code}\n            parentValue={parentValue}\n            parentCode={props.component.qualifiedCode}\n            component={option}\n            columns={props.component.columns || 3}\n            iconSize={props.component.iconSize || \"150\"}\n            spacing={props.component.spacing || 8}\n            theme={theme}\n            hideText={hideText}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nfunction IconMcqChoice({\n  key,\n  component,\n  parentValue,\n  parentCode,\n  iconSize,\n  columns,\n  spacing,\n  hideText,\n  theme,\n}) {\n  const dispatch = useDispatch();\n  const checked = parentValue.indexOf(component.code) > -1;\n  return (\n    <Box\n      key={key}\n      sx={{\n        flex: `0 1 calc(${100 / columns}% - ${spacing || 8}px)`,\n        textAlign: \"center\",\n        cursor: \"pointer\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <DynamicSvg\n          onIconClick={() =>{\n            let parentValue2 = [...parentValue];\n            if (checked) {\n              parentValue2 = parentValue2.filter((el) => el !== component.code);\n            } else {\n              parentValue2.push(component.code);\n            }\n            dispatch(valueChange({ componentCode: parentCode, value: parentValue2 }));\n          }}\n          imageHeight=\"100%\"\n          maxHeight={iconSize + \"px\"}\n          svgUrl={\n            component?.resources?.icon\n              ? buildResourceUrl(component?.resources?.icon)\n              : undefined\n          }\n          isSelected={checked}\n          theme={theme}\n        />\n      </div>\n\n      {!hideText && (\n        <Box\n          sx={{\n            textAlign: \"center\",\n            fontFamily: theme.textStyles.text.font,\n            color: checked\n              ? theme.palette.primary.main\n              : theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {component.content?.label}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default IconMcq;\n"],"names":["IconMcq","props","_props$component","theme","useTheme","parentValue","useSelector","state","runState","values","component","qualifiedCode","value","shallowEqual","hideText","runValues","s","jsx","Box","sx","gap","spacing","className","styles","iconFlexContainer","children","answers","map","option","_runValues$option$qua","_runValues$option$qua2","relevance","IconMcqChoice","parentCode","columns","iconSize","code","key","_component$resources","_component$resources2","_component$content","dispatch","useDispatch","checked","indexOf","jsxs","flex","textAlign","cursor","style","display","justifyContent","width","DynamicSvg","onIconClick","parentValue2","filter","el","push","valueChange","componentCode","imageHeight","maxHeight","svgUrl","resources","icon","buildResourceUrl","isSelected","fontFamily","textStyles","text","font","color","palette","primary","main","fontSize","size","content","label"],"mappings":"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"}