{"version":3,"file":"Ranking-BeNLNUs6.js","sources":["../../src/components/Questions/Ranking/Ranking.jsx"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport React, { Fragment, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport styles from \"./Ranking.module.css\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { orderChange, valueChange } from \"~/state/runState\";\n\nfunction Ranking(props) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      valuesMap[element.qualifiedCode] =\n        state.runState.values[element.qualifiedCode].value;\n    });\n    return valuesMap;\n  }, shallowEqual);\n\n  const itemTypeByCode = (code) => {\n    return isNaN(state[code]) ? \"unsorted\" : \"sorted\";\n  };\n\n  const order = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      if (state.runState.order) {\n        valuesMap[element.qualifiedCode] =\n          state.runState.order[element.qualifiedCode];\n      } else {\n        valuesMap[element.qualifiedCode] =\n          state.runState.values[element.qualifiedCode].order + 1;\n      }\n    });\n    return valuesMap;\n  }, shallowEqual);\n\n  const withoutOrder = props.component.answers\n    .filter((option) => !state[option.qualifiedCode])\n    .sort(function (a, b) {\n      return order[a.qualifiedCode] - order[b.qualifiedCode];\n    });\n\n  const withOrder = props.component.answers\n    .filter((option) => +state[option.qualifiedCode] > 0)\n    .sort(function (a, b) {\n      return state[a.qualifiedCode] - state[b.qualifiedCode];\n    });\n\n  const onItemTransfer = (item, index, itemType) => {\n    const unOrdered = { ...order };\n    if (\n      itemType == \"sorted\" &&\n      itemTypeByCode(item.qualifiedCode) == \"unsorted\"\n    ) {\n      const currentOrder = index + 1;\n      for (let key in state) {\n        if (state.hasOwnProperty(key)) {\n          if (state[key] >= currentOrder) {\n            dispatch(\n              valueChange({\n                componentCode: key,\n                value: state[key] + 1,\n              })\n            );\n          }\n        }\n      }\n      dispatch(\n        valueChange({\n          componentCode: item.qualifiedCode,\n          value: currentOrder,\n        })\n      );\n      item.index = index;\n\n      const oldOrder = unOrdered[item.qualifiedCode];\n      withoutOrder.forEach((item) => {\n        if (unOrdered[item.qualifiedCode] >= oldOrder) {\n          unOrdered[item.qualifiedCode] = unOrdered[item.qualifiedCode] - 1;\n        }\n      });\n\n      dispatch(orderChange(unOrdered));\n    } else if (\n      itemType == \"unsorted\" &&\n      itemTypeByCode(item.qualifiedCode) == \"sorted\"\n    ) {\n      const currentOrder = state[item.qualifiedCode];\n      for (let key in state) {\n        if (state.hasOwnProperty(key)) {\n          if (state[key] >= currentOrder) {\n            dispatch(\n              valueChange({\n                componentCode: key,\n                value: state[key] - 1,\n              })\n            );\n          }\n        }\n      }\n      dispatch(\n        valueChange({\n          componentCode: item.qualifiedCode,\n          value: undefined,\n        })\n      );\n      item.index = index;\n\n      const oldOrder = index + 1;\n\n      withoutOrder.forEach((item) => {\n        if (unOrdered[item.qualifiedCode] >= oldOrder) {\n          unOrdered[item.qualifiedCode] = unOrdered[item.qualifiedCode] + 1;\n        }\n      });\n      unOrdered[item.qualifiedCode] = oldOrder;\n      dispatch(orderChange(unOrdered));\n    }\n  };\n\n  const onDoubleClick = (item) => {\n    if (itemTypeByCode(item.qualifiedCode) == \"unsorted\") {\n      onItemTransfer(item, withOrder.length, \"sorted\");\n    } else {\n      onItemTransfer(item, withoutOrder.length, \"unsorted\");\n    }\n  };\n\n  const onHover = (\n    hoveringItem,\n    currentItem,\n    currentItemType,\n    currentItemIndex\n  ) => {\n    const unOrdered = { ...order };\n    if (\n      currentItemType == \"unsorted\" &&\n      itemTypeByCode(hoveringItem.qualifiedCode) == \"unsorted\"\n    ) {\n      const hoveringOrder = unOrdered[hoveringItem.qualifiedCode];\n      unOrdered[hoveringItem.qualifiedCode] =\n        unOrdered[currentItem.qualifiedCode];\n      unOrdered[currentItem.qualifiedCode] = hoveringOrder;\n      dispatch(orderChange(unOrdered));\n      hoveringItem.index = currentItemIndex;\n    } else if (\n      currentItemType == \"sorted\" &&\n      itemTypeByCode(hoveringItem.qualifiedCode) == \"sorted\"\n    ) {\n      dispatch(\n        valueChange({\n          componentCode: hoveringItem.qualifiedCode,\n          value: state[currentItem.qualifiedCode],\n        })\n      );\n      dispatch(\n        valueChange({\n          componentCode: currentItem.qualifiedCode,\n          value: state[hoveringItem.qualifiedCode],\n        })\n      );\n      hoveringItem.index = currentItemIndex;\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n      }}\n    >\n      <RankingContainer\n        styles={styles}\n        ordererLength={withOrder.length}\n        unordererLength={withoutOrder.length}\n        onHover={onHover}\n        order={order}\n        onItemTransfer={onItemTransfer}\n        onDoubleClick={onDoubleClick}\n        itemType=\"unsorted\"\n        options={withoutOrder}\n      />\n      <RankingContainer\n        styles={styles}\n        onHover={onHover}\n        onItemTransfer={onItemTransfer}\n        onDoubleClick={onDoubleClick}\n        ordererLength={withOrder.length}\n        unordererLength={withoutOrder.length}\n        order={order}\n        itemType=\"sorted\"\n        options={withOrder}\n      />\n    </div>\n  );\n}\n\nfunction RankingContainer({\n  styles,\n  itemType,\n  options,\n  onItemTransfer,\n  onDoubleClick,\n  onHover,\n}) {\n  const refDrop = useRef(null);\n  return (\n    <Box\n      ref={refDrop}\n      className={styles.dragContainer}\n      sx={{ backgroundColor: \"background.default\" }}\n    >\n      {options.map((option, index) => {\n        return (\n          <Fragment key={option.code}>\n            <DropArea\n              itemType={itemType}\n              index={index}\n              key={\"drop\" + option.code}\n              onItemTransfer={onItemTransfer}\n            />\n            <RankingOption\n              index={index}\n              key={option.code}\n              onHover={onHover}\n              itemType={itemType}\n              option={option}\n              rankingItemStyle={styles.rankingItem}\n              onDoubleClick={onDoubleClick}\n            />\n          </Fragment>\n        );\n      })}\n      <DropArea\n        itemType={itemType}\n        index={options.length}\n        key=\"last\"\n        fillParent={true}\n        onItemTransfer={onItemTransfer}\n      />\n    </Box>\n  );\n}\n\nfunction RankingOption({\n  option,\n  onDoubleClick,\n  rankingItemStyle,\n  index,\n  onHover,\n  itemType,\n}) {\n  const containerRef = useRef();\n  const item = {\n    index: index,\n    qualifiedCode: option.qualifiedCode,\n  };\n  const [isDragging, drag, preview] = useDrag({\n    type: \"rankingOption\",\n    item,\n    collect: (monitor) =>\n      monitor.getItem()?.qualifiedCode === option.qualifiedCode,\n  });\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"rankingOption\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (\n        !containerRef.current ||\n        !monitor.isOver({ shallow: true }) ||\n        !item\n      ) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = containerRef.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      onHover(item, option, itemType, index);\n    },\n  });\n  drop(preview(containerRef));\n  return (\n    <div ref={drag}>\n      <Box\n        ref={containerRef}\n        data-handler-id={handlerId}\n        style={{\n          opacity: isDragging ? \"0.2\" : \"1\",\n        }}\n        onDoubleClick={() => onDoubleClick(item)}\n        className={rankingItemStyle}\n        sx={{ backgroundColor: \"background.paper\" }}\n      >\n        {option.content?.label}\n      </Box>\n    </div>\n  );\n}\n\nfunction DropArea({ index, onItemTransfer, itemType, fillParent }) {\n  const containerRef = useRef();\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"rankingOption\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (\n        !containerRef.current ||\n        !monitor.isOver({ shallow: true }) ||\n        !item\n      ) {\n        return;\n      }\n      onItemTransfer(item, index, itemType);\n    },\n  });\n  drop(containerRef);\n  return (\n    <div\n      style={{ flex: fillParent ? 1 : \"inherit\", minHeight: \"12px\" }}\n      ref={containerRef}\n      data-handler-id={handlerId}\n    />\n  );\n}\n\nexport default Ranking;\n"],"names":["state","item","jsxs","jsx","styles","useRef","Fragment","_a"],"mappings":"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"}