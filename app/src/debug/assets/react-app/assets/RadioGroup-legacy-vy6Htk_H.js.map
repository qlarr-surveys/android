{"version":3,"file":"RadioGroup-legacy-vy6Htk_H.js","sources":["../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../node_modules/@mui/material/RadioGroup/RadioGroup.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"className\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from '../FormGroup';\nimport { getRadioGroupUtilityClass } from './radioGroupClasses';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      className,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],"names":["getRadioGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","props","classes","row","error","slots","root","composeClasses","RadioGroup","exports","React.forwardRef","forwardRef","ref","actions","children","className","defaultValue","nameProp","name","onChange","valueProp","value","other","_objectWithoutPropertiesLoose","rootRef","React.useRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","React.useImperativeHandle","useImperativeHandle","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","React.useMemo","event","target","_jsx","jsx","RadioGroupContext","Provider","FormGroup","_extends","role","clsx"],"mappings":"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","x_google_ignoreList":[0,1]}