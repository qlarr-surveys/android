{"version":3,"file":"index-legacy-CG_u7Iig.js","sources":["../../src/pages/manage/Login/index.jsx"],"sourcesContent":["import * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport Link from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { useBoolean } from \"../../../hooks/use-boolean\";\nimport FormProvider, { RHFTextField } from \"../../../components/hook-form\";\nimport Iconify from \"~/components/iconify\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport RouterLink from \"~/components/router/router-link\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { useService } from \"~/hooks/use-service\";\n\n// ----------------------------------------------------------------------\n\nexport default function LoginView() {\n  const authService = useService(\"auth\");\n\n  const { t } = useTranslation(\"manage\");\n\n  const passwordShow = useBoolean();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(t(\"email_required\"))\n      .matches(\n        /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/i,\n        t(\"error.invalid_email\")\n      ),\n    password: Yup.string().required(t(\"password_required\")),\n  });\n\n  const defaultValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    setError,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const handleError = (processedError) => {\n    if (processedError.name == PROCESSED_ERRORS.WRONG_CREDENTIALS.name) {\n      setError(\"email\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n      setError(\"password\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n    }\n  };\n\n  const onSubmit = handleSubmit(async (data) => {\n    dispatch(setLoading(true));\n    try {\n      await authService.login(data.email, data.password);\n      const { from } = location.state || { from: { pathname: \"/\" } };\n      navigate(from);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  });\n\n\n  const renderHead = (\n    <div>\n      <Typography variant=\"h3\" paragraph>\n        {t(\"login.login\")}\n      </Typography>\n    </div>\n  );\n\n\n  const renderForm = (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={2.5} alignItems=\"flex-end\">\n        <RHFTextField name=\"email\" label={t(\"label.email\")} />\n\n        <RHFTextField\n          name=\"password\"\n          label={t(\"label.password\")}\n          type={passwordShow.value ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={passwordShow.onToggle} edge=\"end\">\n                  <Iconify\n                    icon={\n                      passwordShow.value ? \"carbon:view\" : \"carbon:view-off\"\n                    }\n                  />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Link\n          component={RouterLink}\n          href=\"/forgot-password\"\n          variant=\"body2\"\n          underline=\"always\"\n          color=\"text.secondary\"\n        >\n          {t(\"login.forgot_password\")}\n        </Link>\n\n        <LoadingButton\n          fullWidth\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          {t(\"login.login\")}\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n\n  return (\n    <>\n      {renderHead}\n\n      {renderForm}\n    </>\n  );\n}\n"],"names":["LoginView","authService","useService","_useTranslation","useTranslation","t","passwordShow","useBoolean","dispatch","useDispatch","navigate","useNavigate","LoginSchema","Yup.object","shape","email","Yup.string","required","matches","password","defaultValues","methods","useForm","resolver","yupResolver","setError","handleSubmit","isSubmitting","formState","handleError","processedError","name","PROCESSED_ERRORS","WRONG_CREDENTIALS","type","message","onSubmit","_ref","_asyncToGenerator","data","setLoading","login","_ref2","location","state","from","pathname","e","_x","apply","arguments","renderHead","jsx","children","Typography","variant","paragraph","renderForm","FormProvider","jsxs","Stack","spacing","alignItems","RHFTextField","label","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","Link","component","RouterLink","href","underline","color","LoadingButton","fullWidth","size","loading","Fragment"],"mappings":"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"}