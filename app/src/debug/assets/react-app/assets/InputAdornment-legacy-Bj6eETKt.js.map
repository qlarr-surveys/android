{"version":3,"file":"InputAdornment-legacy-Bj6eETKt.js","sources":["../../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","inputAdornmentClasses","generateUtilityClasses","_span","_excluded","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","useUtilityClasses","classes","hiddenLabel","size","slots","composeClasses","InputAdornmentRoot","styled","name","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","positionStart","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","exports","React.forwardRef","forwardRef","inProps","ref","useDefaultProps","children","className","_props$component","component","_props$disablePointer","_props$disableTypogra","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","_jsx","jsx","FormControlContext","Provider","value","as","clsx","Typography","_jsxs","jsxs","React.Fragment"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;QAEO,SAASA,6BAA6BA,CAACC,IAAI,EAAE;UAClD,OAAOC,oBAAoB,CAAC,mBAAmB,EAAED,IAAI,CAAC;QACxD;QACA,MAAME,qBAAqB,GAAGC,sBAAsB,CAAC,mBAAmB,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,eAAe,EAAE,aAAa,EAAE,sBAAsB,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;QCDzM,IAAIC,KAAA;QACJ,MAAMC,SAAA,GAAY,CAAC,UAAY,EAAA,WAAA,EAAa,aAAa,sBAAwB,EAAA,mBAAA,EAAqB,YAAY,SAAS,CAAA;QAc3H,MAAMC,iBAAA,GAAoBA,CAACC,KAAA,EAAOC,MAAW,KAAA;UACrC,MACJC,UAAA,GACEF,KAAA,CADFE,UAAA;UAEF,OAAO,CAACD,MAAO,CAAAE,IAAA,EAAMF,OAAO,WAAWG,UAAA,CAAWF,WAAWG,QAAQ,CAAC,EAAE,CAAG,EAAAH,UAAA,CAAWI,yBAAyB,IAAQ,IAAAL,MAAA,CAAOK,sBAAsBL,MAAO,CAAAC,UAAA,CAAWK,OAAO,CAAC,CAAA;QAChL,CAAA;QACA,MAAMC,oBAAkCN,UAAA,IAAA;UAChC,MACJO,OAAA,GAMEP,UAAA,CANFO,OAAA;YACAH,oBAAA,GAKEJ,UAAA,CALFI,oBAAA;YACAI,WAAA,GAIER,UAAA,CAJFQ,WAAA;YACAL,QAAA,GAGEH,UAAA,CAHFG,QAAA;YACAM,IAAA,GAEET,UAAA,CAFFS,IAAA;YACAJ,OAAA,GACEL,UAAA,CADFK,OAAA;UAEF,MAAMK,KAAQ,GAAA;YACZT,MAAM,CAAC,MAAA,EAAQG,wBAAwB,sBAAwB,EAAAD,QAAA,IAAY,WAAWD,UAAW,CAAAC,QAAQ,CAAC,EAAI,EAAAE,OAAA,EAASG,eAAe,aAAe,EAAAC,IAAA,IAAQ,OAAOP,UAAW,CAAAO,IAAI,CAAC,EAAE;UAAA,CACxL;UACO,OAAAE,cAAA,CAAeD,KAAO,EAAApB,6BAAA,EAA+BiB,OAAO,CAAA;QACrE,CAAA;QACA,MAAMK,kBAAA,GAAqBC,OAAO,KAAO,EAAA;UACvCC,IAAM,EAAA,mBAAA;UACNvB,IAAM,EAAA,MAAA;UACNM;QACF,CAAC,EAAE,CAAC;UACFkB,KAAA;UACAf;QACF,CAAA,KAAMgB,QAAS,CAAA;UACbC,OAAS,EAAA,MAAA;UACTC,MAAQ,EAAA,QAAA;UAAA;UAERC,SAAW,EAAA,KAAA;UACXC,UAAY,EAAA,QAAA;UACZC,UAAY,EAAA,QAAA;UACZC,KAAQ,EAAA,CAAAP,KAAA,CAAMQ,IAAQ,IAAAR,KAAA,EAAOS,QAAQC,MAAO,CAAAC;QAC9C,CAAG,EAAA1B,UAAA,CAAWK,YAAY,QAAY,IAAA;UAAA;UAEpC,CAAC,KAAKZ,qBAAsB,CAAAkC,aAAa,UAAUlC,qBAAsB,CAAAe,WAAW,GAAG,GAAG;YACxFoB,SAAW,EAAA;UACb;QACF,CAAG,EAAA5B,UAAA,CAAWG,aAAa,OAAW,IAAA;UAAA;UAEpC0B,WAAa,EAAA;QACf,CAAG,EAAA7B,UAAA,CAAWG,aAAa,KAAS,IAAA;UAAA;UAElC2B,UAAY,EAAA;QACd,CAAG,EAAA9B,UAAA,CAAWI,yBAAyB,IAAQ,IAAA;UAAA;UAE7C2B,aAAe,EAAA;QACjB,CAAC,CAAC,CAAA;QACI,MAAAC,iBAA8BC,OAAA,CAAA,GAAA,EAAA,eAAMC,YAAA,CAAAC,UAAA,CAAW,SAASH,eAAAA,CAAeI,SAASC,GAAK,EAAA;UACzF,MAAMvC,QAAQwC,eAAgB,CAAA;YAC5BxC,KAAO,EAAAsC,OAAA;YACPtB,IAAM,EAAA;UAAA,CACP,CAAA;UACK,MACFyB,QAAA,GAOEzC,KAAA,CAPFyC,QAAA;YACAC,SAAA,GAME1C,KAAA,CANF0C,SAAA;YAAAC,gBAAA,GAME3C,KAAA,CALF4C,SAAY;YAAZA,SAAY,GAAAD,gBAAA,cAAA,KAAA,GAAAA,gBAAA;YAAAE,qBAAA,GAKV7C,KAAA,CAJFM,oBAAuB;YAAvBA,oBAAuB,GAAAuC,qBAAA,cAAA,KAAA,GAAAA,qBAAA;YAAAC,qBAAA,GAIrB9C,KAAA,CAHF+C,iBAAoB;YAApBA,iBAAoB,GAAAD,qBAAA,cAAA,KAAA,GAAAA,qBAAA;YACpBzC,QAAA,GAEEL,KAAA,CAFFK,QAAA;YACS2C,WAAA,GACPhD,KAAA,CADFO,OAAS;YAEX0C,KAAQ,GAAAC,6BAAA,CAA8BlD,OAAOF,SAAS,CAAA;UAClD,MAAAqD,cAAA,GAAiBC,cAAe,CAAA,CAAA,IAAK,EAAC;UAC5C,IAAI7C,OAAU,GAAAyC,WAAA;UACV,IAAAA,WAAA,IAAeG,eAAe5C,OAAS,EAAA;UAOvC,IAAA4C,cAAA,IAAkB,CAAC5C,OAAS,EAAA;YAC9BA,OAAA,GAAU4C,cAAe,CAAA5C,OAAA;UAC3B;UACA,MAAML,UAAa,GAAAgB,QAAA,CAAS,CAAC,CAAA,EAAGlB,KAAO,EAAA;YACrCU,aAAayC,cAAe,CAAAzC,WAAA;YAC5BC,MAAMwC,cAAe,CAAAxC,IAAA;YACrBL,oBAAA;YACAD,QAAA;YACAE;UAAA,CACD,CAAA;UACK,MAAAE,OAAA,GAAUD,kBAAkBN,UAAU,CAAA;UACxB,sBAAAmD,iBAAA,CAAAC,GAAA,CAAKC,mBAAmBC,QAAU,EAAA;YACpDC,KAAO,EAAA,IAAA;YACPhB,QAAA,EAA4BY,eAAAA,iBAAAA,CAAAA,GAAA,CAAAvC,kBAAA,EAAoBI,QAAS,CAAA;cACvDwC,EAAI,EAAAd,SAAA;cACJ1C,UAAA;cACAwC,SAAW,EAAAiB,IAAA,CAAKlD,OAAQ,CAAAN,IAAA,EAAMuC,SAAS,CAAA;cACvCH;eACCU,KAAO,EAAA;cACRR,UAAU,OAAOA,QAAA,KAAa,YAAY,CAACM,iBAAA,GAAA,qCAAsCa,UAAY,EAAA;gBAC3FpC,KAAO,EAAA,gBAAA;gBACPiB;cAAA,CACD,CAAA,GAAA,eAAuBoB,iBAAA,CAAAC,IAAA,CAAAC,qBAAgB,EAAA;gBACtCtB,QAAA,EAAU,CAACpC,QAAa,KAAA,OAAA,IAAA;gBAA+FR,KAAA,KAAUA,KAAqB,kBAAAwD,iBAAA,CAAAC,GAAA,CAAK,MAAQ,EAAA;kBACjKZ,SAAW,EAAA,aAAA;kBACXD,QAAU,EAAA;gBAAA,CACX,CAAA,CAAA,IAAM,MAAMA,QAAQ;cAAA,CACtB;YAAA,CACF,CAAC;UAAA,CACH,CAAA;QACH,CAAC,CAAA,CAAA;;;;","x_google_ignoreList":[0,1]}