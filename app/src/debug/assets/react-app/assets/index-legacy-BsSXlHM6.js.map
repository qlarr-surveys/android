{"version":3,"file":"index-legacy-BsSXlHM6.js","sources":["../../src/pages/manage/ResetPassword/index.jsx"],"sourcesContent":["import * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport Link from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport RouterLink from \"~/components/router/router-link\";\nimport Iconify from \"~/components/iconify\";\nimport Image from \"~/components/image/image\";\nimport FormProvider, { RHFTextField } from \"../../../components/hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InputAdornment } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useBoolean } from \"~/hooks/use-boolean\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { routes } from \"~/routes\";\nimport { useService } from \"~/hooks/use-service\";\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPasswordView({ confirmNewUser = false }) {\n  const authService = useService(\"auth\");\n  const { t } = useTranslation(\"manage\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const passwordShow = useBoolean();\n  const [searchParams] = useSearchParams();\n  const { token } = useParams();\n\n  const refreshToken = searchParams.get(\"token\");\n\n  const ResetPasswordSchema = Yup.object().shape({\n    password: Yup.string()\n      .required(t(\"password_required\"))\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/,\n        t(\"error.invalid_password\")\n      ),\n    confirmPassword: Yup.string()\n      .required(t(\"password_required\"))\n      .oneOf([Yup.ref(\"password\")], t(\"error.password_should_match\")),\n  });\n\n  const defaultValues = {\n    email: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ResetPasswordSchema),\n    defaultValues,\n  });\n\n  const {\n    setError,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await authService.resetPassword(\n        confirmNewUser,\n        confirmNewUser ? token : refreshToken,\n        data.password\n      );\n      navigate(\"/\");\n    } catch (processedError) {\n      setError(\"password\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n      setError(\"confirmPassword\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n    } finally {\n      dispatch(setLoading(false));\n    }\n  });\n\n  return (\n    <>\n      <Stack\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{\n          px: 2,\n          py: 12,\n          minHeight: \"100vh\",\n        }}\n      >\n        <Stack\n          spacing={4}\n          sx={{\n            p: 4,\n            width: 1,\n            mx: \"auto\",\n            flexShrink: 0,\n            maxWidth: 400,\n            borderRadius: 2,\n            bgcolor: \"background.default\",\n            boxShadow: theme.customShadows.z24,\n            textAlign: { xs: \"center\", md: \"left\" },\n          }}\n        >\n          <Stack sx={{ textAlign: \"center\" }}>\n            <Image\n              alt=\"reset password\"\n              src=\"/ic_lock_password.svg\"\n              sx={{ mb: 5, width: 96, height: 96, mx: \"auto\" }}\n            />\n\n            <Typography variant=\"h3\" paragraph>\n              {t(\"reset_password.title\")}\n            </Typography>\n\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={2.5}>\n                <RHFTextField\n                  name=\"password\"\n                  label={t(\"label.new_password\")}\n                  type={passwordShow.value ? \"text\" : \"password\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={passwordShow.onToggle} edge=\"end\">\n                          <Iconify\n                            icon={\n                              passwordShow.value\n                                ? \"carbon:view\"\n                                : \"carbon:view-off\"\n                            }\n                          />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <RHFTextField\n                  name=\"confirmPassword\"\n                  label={t(\"label.confirm_new_password\")}\n                  type={passwordShow.value ? \"text\" : \"password\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={passwordShow.onToggle} edge=\"end\">\n                          <Iconify\n                            icon={\n                              passwordShow.value\n                                ? \"carbon:view\"\n                                : \"carbon:view-off\"\n                            }\n                          />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Stack>\n\n              <LoadingButton\n                fullWidth\n                size=\"large\"\n                color=\"primary\"\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n                sx={{ mt: 2.5 }}\n              >\n                {t(\"reset_password.reset\")}\n              </LoadingButton>\n            </FormProvider>\n\n            <Link\n              component={RouterLink}\n              href={routes.login}\n              color=\"inherit\"\n              variant=\"subtitle2\"\n              sx={{\n                mt: 3,\n                mx: \"auto\",\n                alignItems: \"center\",\n                display: \"inline-flex\",\n              }}\n            >\n              <Iconify icon=\"carbon:chevron-left\" width={16} sx={{ mr: 1 }} />\n              {t(\"forgot_password.return_to_signin\")}\n            </Link>\n          </Stack>\n        </Stack>\n      </Stack>\n    </>\n  );\n}\n"],"names":["ResetPasswordView","confirmNewUser","authService","useService","_useTranslation","useTranslation","t","navigate","useNavigate","dispatch","useDispatch","theme","useTheme","passwordShow","useBoolean","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","_useParams","useParams","token","refreshToken","get","ResetPasswordSchema","Yup.object","shape","password","Yup.string","required","matches","confirmPassword","oneOf","Yup.ref","defaultValues","email","methods","useForm","resolver","yupResolver","setError","handleSubmit","isSubmitting","formState","onSubmit","_ref","_asyncToGenerator","data","resetPassword","processedError","type","message","name","setLoading","_x","apply","arguments","jsx","Fragment","children","Stack","alignItems","justifyContent","sx","px","py","minHeight","spacing","p","width","mx","flexShrink","maxWidth","borderRadius","bgcolor","boxShadow","customShadows","z24","textAlign","xs","md","Image","alt","src","mb","height","Typography","variant","paragraph","FormProvider","jsxs","RHFTextField","label","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","LoadingButton","fullWidth","size","color","loading","mt","Link","component","RouterLink","href","routes","login","display","mr"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4BA,SAAwBA,iBAAkBA,CAAA;UAAEC,cAAiB,GAAA;SAAS,EAAA;UAC9D,MAAAC,WAAA,GAAcC,WAAW,MAAM,CAAA;UACrC,MAAAC,eAAA,GAAcC,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAAF,eAAA,CAAAE,CAAA;UACR,MAAMC,WAAWC,WAAY,EAAA;UAC7B,MAAMC,WAAWC,WAAY,EAAA;UAC7B,MAAMC,QAAQC,QAAS,EAAA;UACvB,MAAMC,eAAeC,UAAW,EAAA;UAC1B,MAAAC,gBAAA,GAAiBC,eAAgB,EAAA;YAAAC,iBAAA,GAAAC,cAAA,CAAAH,gBAAA;YAAhCI,YAAY,GAAAF,iBAAA;UACb,MAAAG,UAAA,GAAYC,SAAU,EAAA;YAApBC,KAAM,GAAAF,UAAA,CAANE,KAAM;UAER,MAAAC,YAAA,GAAeJ,YAAa,CAAAK,GAAA,CAAI,OAAO,CAAA;UAE7C,MAAMC,mBAAsB,GAAAC,QAAW,CAAA,CAAA,CAAEC,KAAM,CAAA;YAC7CC,QAAA,EAAUC,QAAW,CAAA,CAAA,CAClBC,SAASxB,CAAE,CAAA,mBAAmB,CAAC,CAC/B,CAAAyB,OAAA,CACC,uCAAA,EACAzB,EAAE,wBAAwB,CAC5B,CAAA;YACF0B,iBAAiBH,QAAI,GAClBC,QAAS,CAAAxB,CAAA,CAAE,mBAAmB,CAAC,CAAA,CAC/B2B,KAAM,CAAA,CAACC,QAAQ,CAAA,UAAU,CAAC,CAAG,EAAA5B,CAAA,CAAE,6BAA6B,CAAC;UAAA,CACjE,CAAA;UAED,MAAM6B,aAAgB,GAAA;YACpBC,KAAO,EAAA;UAAA,CACT;UAEA,MAAMC,UAAUC,OAAQ,CAAA;YACtBC,QAAA,EAAUC,EAAYf,mBAAmB,CAAA;YACzCU;UAAA,CACD,CAAA;UAEK,MACJM,QAAA,GAGEJ,OAAA,CAHFI,QAAA;YACAC,YAAA,GAEEL,OAAA,CAFFK,YAAA;YACaC,YAAa,GACxBN,OAAA,CADFO,SAAA,CAAaD,YAAa;UAGtB,MAAAE,QAAA,GAAWH,YAAa;YAAA,IAAAI,IAAA,GAAAC,iBAAA,CAAA,WAAOC,IAAS,EAAA;cACxC,IAAA;gBACF,MAAM9C,WAAY,CAAA+C,aAAA,CAChBhD,cAAA,EACAA,iBAAiBqB,KAAQ,GAAAC,YAAA,EACzByB,IAAK,CAAApB,QAAA,CACP;gBACArB,QAAA,CAAS,GAAG,CAAA;uBACL2C,cAAgB,EAAA;gBACvBT,QAAA,CAAS,UAAY,EAAA;kBACnBU,IAAM,EAAA,QAAA;kBACNC,OAAS,EAAA9C,CAAA,CAAE,oBAAoB4C,cAAA,CAAeG,IAAI,EAAE;gBAAA,CACrD,CAAA;gBACDZ,QAAA,CAAS,iBAAmB,EAAA;kBAC1BU,IAAM,EAAA,QAAA;kBACNC,OAAS,EAAA9C,CAAA,CAAE,oBAAoB4C,cAAA,CAAeG,IAAI,EAAE;gBAAA,CACrD,CAAA;cAAA,CACD,SAAA;gBACS5C,QAAA,CAAA6C,UAAA,CAAW,KAAK,CAAC,CAAA;cAC5B;YAAA,CACD;YAAA,iBAAAC,EAAA;cAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAA;UAED,OAAA,eAEIC,qBAAA,CAAAC,iBAAAA,CAAAA,QAAA,EAAA;YAAAC,QAAA,iBAAAF,iBAAA,CAAAA,GAAA,CAACG,KAAA,EAAA;cACCC,UAAW,EAAA,QAAA;cACXC,cAAe,EAAA,QAAA;cACfC,EAAI,EAAA;gBACFC,EAAI,EAAA,CAAA;gBACJC,EAAI,EAAA,EAAA;gBACJC,SAAW,EAAA;cACb,CAAA;cAEAP,QAAA,iBAAAF,iBAAA,CAAAA,GAAA,CAACG,KAAA,EAAA;gBACCO,OAAS,EAAA,CAAA;gBACTJ,EAAI,EAAA;kBACFK,CAAG,EAAA,CAAA;kBACHC,KAAO,EAAA,CAAA;kBACPC,EAAI,EAAA,MAAA;kBACJC,UAAY,EAAA,CAAA;kBACZC,QAAU,EAAA,GAAA;kBACVC,YAAc,EAAA,CAAA;kBACdC,OAAS,EAAA,oBAAA;kBACTC,SAAA,EAAWjE,MAAMkE,aAAc,CAAAC,GAAA;kBAC/BC,SAAW,EAAA;oBAAEC,EAAI,EAAA,QAAA;oBAAUC,IAAI;kBAAO;gBACxC,CAAA;gBAEArB,gDAACC,KAAM,EAAA;kBAAAG,EAAA,EAAI;oBAAEe,SAAA,EAAW;kBACtB,CAAA;kBAAAnB,QAAA,EAAA,CAAA,eAAAF,iBAAA,CAAAA,GAAA,CAACwB,KAAA,EAAA;oBACCC,GAAI,EAAA,gBAAA;oBACJC,GAAI,EAAA,uBAAA;oBACJpB,EAAA,EAAI;sBAAEqB,EAAI,EAAA,CAAA;sBAAGf,OAAO,EAAI;sBAAAgB,MAAA,EAAQ,EAAI;sBAAAf,EAAA,EAAI;oBAAO;kBAAA,CACjD,CAAA,EAEAb,eAAAA,iBAAAA,CAAAA,GAAA,CAAC6B;oBAAWC,OAAQ,EAAA,IAAA;oBAAKC,WAAS,IAC/B;oBAAA7B,QAAA,EAAAtD,CAAA,CAAE,sBAAsB;mBAC3B,CAAA,EAAA,sCAECoF,YAAa,EAAA;oBAAArD,OAAA;oBAAkBQ,QAAU,EAAAH,YAAA,CAAaG,QAAQ,CAC7D;oBAAAe,QAAA,EAAA,CAAC+B,eAAAA,iBAAAA,CAAAA,IAAA,CAAA9B,KAAA,EAAA;sBAAMO,SAAS,GACd;sBAAAR,QAAA,EAAA,CAAA,eAAAF,iBAAA,CAAAA,GAAA,CAACkC,YAAA,EAAA;wBACCvC,IAAK,EAAA,UAAA;wBACLwC,KAAA,EAAOvF,EAAE,oBAAoB,CAAA;wBAC7B6C,IAAA,EAAMtC,YAAa,CAAAiF,KAAA,GAAQ,MAAS,GAAA,UAAA;wBACpCC,UAAY,EAAA;0BACVC,YAAA,EAAA,eACGtC,iBAAA,CAAAA,GAAA,CAAAuC,cAAA,EAAA;4BAAeC,QAAS,EAAA,KAAA;4BACvBtC,QAAC,iBAAAF,iBAAA,CAAAA,GAAA,CAAAyC,UAAA,EAAA;8BAAWC,OAAS,EAAAvF,YAAA,CAAawF,QAAU;8BAAAC,IAAA,EAAK,KAC/C;8BAAA1C,QAAA,iBAAAF,iBAAA,CAAAA,GAAA,CAAC6C,OAAA,EAAA;gCACCC,IAAA,EACE3F,YAAa,CAAAiF,KAAA,GACT,aACA,GAAA;8BAAA;6BAGV;0BACF,CAAA;wBAEJ;sBAAA,CACF,CAAA,EAAA,eAEApC,iBAAA,CAAAA,GAAA,CAACkC,YAAA,EAAA;wBACCvC,IAAK,EAAA,iBAAA;wBACLwC,KAAA,EAAOvF,EAAE,4BAA4B,CAAA;wBACrC6C,IAAA,EAAMtC,YAAa,CAAAiF,KAAA,GAAQ,MAAS,GAAA,UAAA;wBACpCC,UAAY,EAAA;0BACVC,YAAA,EAAA,eACGtC,iBAAA,CAAAA,GAAA,CAAAuC,cAAA,EAAA;4BAAeC,QAAS,EAAA,KAAA;4BACvBtC,QAAC,iBAAAF,iBAAA,CAAAA,GAAA,CAAAyC,UAAA,EAAA;8BAAWC,OAAS,EAAAvF,YAAA,CAAawF,QAAU;8BAAAC,IAAA,EAAK,KAC/C;8BAAA1C,QAAA,iBAAAF,iBAAA,CAAAA,GAAA,CAAC6C,OAAA,EAAA;gCACCC,IAAA,EACE3F,YAAa,CAAAiF,KAAA,GACT,aACA,GAAA;8BAAA;6BAGV;0BACF,CAAA;wBAEJ;sBAAA,CACF,CAAA;qBACF,CAAA,EAAA,eAEApC,iBAAA,CAAAA,GAAA,CAAC+C,aAAA,EAAA;sBACCC,SAAS,EAAA,IAAA;sBACTC,IAAK,EAAA,OAAA;sBACLC,KAAM,EAAA,SAAA;sBACNzD,IAAK,EAAA,QAAA;sBACLqC,OAAQ,EAAA,WAAA;sBACRqB,OAAS,EAAAlE,YAAA;sBACTqB,EAAA,EAAI;wBAAE8C,EAAA,EAAI;sBAAI,CAAA;sBAEblD,YAAE,sBAAsB;oBAAA,CAC3B,CAAA;mBACF,CAAA,EAAA,eAEA+B,iBAAA,CAAAA,IAAA,CAACoB,IAAA,EAAA;oBACCC,SAAW,EAAAC,UAAA;oBACXC,MAAMC,MAAO,CAAAC,KAAA;oBACbR,KAAM,EAAA,SAAA;oBACNpB,OAAQ,EAAA,WAAA;oBACRxB,EAAI,EAAA;sBACF8C,EAAI,EAAA,CAAA;sBACJvC,EAAI,EAAA,MAAA;sBACJT,UAAY,EAAA,QAAA;sBACZuD,OAAS,EAAA;oBACX,CAAA;oBAEAzD,QAAA,EAAA,CAACF,eAAAA,iBAAAA,CAAAA,GAAA,CAAA6C,OAAA,EAAA;sBAAQC,MAAK,qBAAsB;sBAAAlC,KAAA,EAAO;sBAAIN,EAAI,EAAA;wBAAEsD,EAAI,EAAA;sBAAK;oBAAA,CAAA,CAAA,EAC7DhH,EAAE,kCAAkC,CAAA;kBAAA,CACvC,CAAA;iBACF;cAAA,CACF;YAAA,CAEJ;UAAA,CAAA,CAAA;QAEJ;;;;"}