{"version":3,"file":"IconScq-legacy-DvP7kHXy.js","sources":["../../src/components/Questions/IconScq/IconScq.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./IconScq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Grid } from \"@mui/material\";\nimport DynamicSvg from '~/components/DynamicSvg';\nimport { buildResourceUrl } from '~/networking/common';\n\nfunction IconScq(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      value: questionState?.value || \"\",\n      showValidation:\n        (show_errors || isDirty) && questionState?.validity === false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n  };\n\n  const hideText = props.component?.hideText || false;\n\n  const runValues = useSelector((s) => s.runState.values);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing || 8}px`,\n      }}\n      className={styles.iconFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        const isSelected = state.value == option.code;\n        const relevance = runValues[option.qualifiedCode]?.relevance ?? true;\n        if (!relevance) return null;\n        return (\n          <Box\n            key={option.code}\n            sx={{\n              flex: `0 1 calc(${100 / props.component.columns}% - ${\n                props.component.spacing || 8\n              }px)`,\n              textAlign: \"center\",\n              cursor: \"pointer\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                width: \"100%\"\n              }}\n            >\n              <DynamicSvg\n                onIconClick={() =>\n                  handleChange(props.component.qualifiedCode, option.code)\n                }\n                imageHeight={\"100%\"}\n                maxHeight={(props.component.iconSize || 150) + \"px\"}\n                svgUrl={\n                  option?.resources?.icon\n                    ? buildResourceUrl(option?.resources?.icon)\n                    : undefined\n                }\n                isSelected={isSelected}\n                theme={theme}\n              />\n            </div>\n\n            {!hideText && (\n              <Box\n                sx={{\n                  textAlign: \"center\",\n                  fontFamily: theme.textStyles.text.font,\n                  color: isSelected\n                    ? theme.palette.primary.main\n                    : theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                }}\n              >\n                {option.content?.label}\n              </Box>\n            )}\n          </Box>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default IconScq;\n"],"names":["IconScq","props","_props$component","theme","useTheme","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","value","showValidation","validity","shallowEqual","dispatch","useDispatch","handleChange","componentCode","valueChange","hideText","runValues","s","jsx","Box","sx","gap","spacing","className","styles","iconFlexContainer","children","answers","map","option","_runValues$option$qua","_runValues$option$qua2","_option$resources","_option$resources2","_option$content","isSelected","code","relevance","jsxs","flex","columns","textAlign","cursor","style","display","justifyContent","width","DynamicSvg","onIconClick","imageHeight","maxHeight","iconSize","svgUrl","resources","icon","buildResourceUrl","fontFamily","textStyles","text","font","color","palette","primary","main","fontSize","size","content","label"],"mappings":"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"}