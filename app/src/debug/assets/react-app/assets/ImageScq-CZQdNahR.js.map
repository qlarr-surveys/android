{"version":3,"file":"ImageScq-CZQdNahR.js","sources":["../../src/components/Questions/ImageScq/ImageScq.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./ImageScq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Card, Grid, Radio } from \"@mui/material\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageScq(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      value: questionState?.value || \"\",\n      showValidation:\n        (show_errors || isDirty) && questionState?.validity === false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n  };\n\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing}px`,\n        justifyContent: isRtl ? \"flex-end\" : \"flex-start\",\n      }}\n      className={styles.imageFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        const backgroundImage = option.resources?.image\n          ? `url('${buildResourceUrl(option.resources?.image)}')`\n          : `url('/placeholder-image.jpg')`;\n        return (\n          <Box\n            key={option.code}\n            sx={{\n              flex: `0 1 calc(${100 / props.component.columns}% - ${props.component.spacing}px)`,\n              cursor: \"pointer\",\n            }}\n            onClick={() =>\n              handleChange(props.component.qualifiedCode, option.code)\n            }\n          >\n            <Box\n              className={styles.imageContainer}\n              style={{\n                paddingTop: `${100 / props.component.imageAspectRatio}%`,\n                borderRadius: \"4px\",\n                backgroundImage: backgroundImage,\n                border:\n                  state.value === option.code\n                    ? `4px solid ${theme.palette.primary.main}`\n                    : \"4px solid transparent\",\n              }}\n            >\n              <div className={styles.selection}>\n                <Radio\n                  checked={state.value === option.code}\n                  onChange={(event) =>\n                    handleChange(event.target.name, event.target.value)\n                  }\n                  value={option.code}\n                  className={styles.radioCheck}\n                  name={props.component.qualifiedCode}\n                  size=\"large\"\n                  sx={{\n                    m:'5px',\n                    color: theme.textStyles.text.color,\n                  }}\n                />\n              </div>\n            </Box>\n            {!props.component.hideText && (\n              <Box\n                sx={{\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                  textAlign: \"center\",\n                  marginTop: \"8px\",\n                }}\n              >\n                {option.content?.label}\n              </Box>\n            )}\n          </Box>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default ImageScq;\n"],"names":["state","jsx","jsxs"],"mappings":";;;;;;;;;;;;;;;;;AASA,SAAS,SAAS,OAAO;AACvB,QAAM,QAAQ;AACR,QAAA,QAAQ,YAAY,CAACA,WAAU;AACnC,QAAI,gBAAgBA,OAAM,SAAS,OAAO,MAAM,UAAU,aAAa;AACvE,QAAI,cAAcA,OAAM,SAAS,OAAO,OAAO;AAC/C,QAAI,UAAUA,OAAM,cAAc,MAAM,UAAU,aAAa;AACxD,WAAA;AAAA,MACL,QAAO,+CAAe,UAAS;AAAA,MAC/B,iBACG,eAAe,aAAY,+CAAe,cAAa;AAAA,IAAA;AAAA,KAE3D,YAAY;AACf,QAAM,WAAW;AAEX,QAAA,eAAe,CAAC,eAAe,UAAU;AAC7C,aAAS,YAAY,EAAE,eAAe,MAAA,CAAO,CAAC;AAAA,EAAA;AAG1C,QAAA,OAAO,YAAY,CAACA,WAAU;AAClC,WAAOA,OAAM,SAAS,OAAO,QAAQ,EAAE;AAAA,EAAA,CACxC;AACK,QAAA,QAAQ,YAAY,SAAS,IAAI;AAGrC,SAAAC,kCAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,IAAI;AAAA,QACF,KAAK,GAAG,aAAM,UAAU,SAAO;AAAA,QAC/B,gBAAgB,QAAQ,aAAa;AAAA,MACvC;AAAA,MACA,WAAW,OAAO;AAAA,MAEjB,UAAM,MAAA,UAAU,QAAQ,IAAI,CAAC,WAAW;;AACjC,cAAA,oBAAkB,YAAO,cAAP,mBAAkB,SACtC,QAAQ,yBAAiB,YAAO,cAAP,mBAAkB,KAAK,GAAC,QACjD;AAEF,eAAAC,kCAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,IAAI;AAAA,cACF,MAAM,YAAY,aAAM,MAAM,UAAU,SAAO,QAAO,aAAM,UAAU,SAAO;AAAA,cAC7E,QAAQ;AAAA,YACV;AAAA,YACA,SAAS,MACP,aAAa,MAAM,UAAU,eAAe,OAAO,IAAI;AAAA,YAGzD,UAAA;AAAA,cAAAD,kCAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,WAAW,OAAO;AAAA,kBAClB,OAAO;AAAA,oBACL,YAAY,GAAG,aAAM,MAAM,UAAU,kBAAgB;AAAA,oBACrD,cAAc;AAAA,oBACd;AAAA,oBACA,QACE,MAAM,UAAU,OAAO,OACnB,aAAa,aAAM,QAAQ,QAAQ,QACnC;AAAA,kBACR;AAAA,kBAEA,UAACA,kCAAA,IAAA,OAAA,EAAI,WAAW,OAAO,WACrB,UAAAA,kCAAA;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACC,SAAS,MAAM,UAAU,OAAO;AAAA,sBAChC,UAAU,CAAC,UACT,aAAa,MAAM,OAAO,MAAM,MAAM,OAAO,KAAK;AAAA,sBAEpD,OAAO,OAAO;AAAA,sBACd,WAAW,OAAO;AAAA,sBAClB,MAAM,MAAM,UAAU;AAAA,sBACtB,MAAK;AAAA,sBACL,IAAI;AAAA,wBACF,GAAE;AAAA,wBACF,OAAO,MAAM,WAAW,KAAK;AAAA,sBAC/B;AAAA,oBAAA;AAAA,kBAAA,GAEJ;AAAA,gBAAA;AAAA,cACF;AAAA,cACC,CAAC,MAAM,UAAU,YAChBA,kCAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,IAAI;AAAA,oBACF,YAAY,MAAM,WAAW,KAAK;AAAA,oBAClC,OAAO,MAAM,WAAW,KAAK;AAAA,oBAC7B,UAAU,MAAM,WAAW,KAAK;AAAA,oBAChC,WAAW;AAAA,oBACX,WAAW;AAAA,kBACb;AAAA,kBAEC,uBAAO,+BAAS;AAAA,gBAAA;AAAA,cACnB;AAAA,YAAA;AAAA,UAAA;AAAA,UAjDG,OAAO;AAAA,QAAA;AAAA,MAmDd,CAEH;AAAA,IAAA;AAAA,EAAA;AAGP;"}