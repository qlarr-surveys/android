{"version":3,"file":"Checkbox-legacy-BGGJaFuH.js","sources":["../../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../../node_modules/@mui/material/Checkbox/checkboxClasses.js","../../node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["CheckBoxOutlineBlankIcon","createSvgIcon","_jsx","jsx","d","CheckBoxIcon","IndeterminateCheckBoxIcon","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","indeterminate","color","size","slots","root","capitalize","composedClasses","composeClasses","_extends","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checked","disabled","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","exports","React.forwardRef","forwardRef","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","className","other","_objectWithoutPropertiesLoose","type","React.cloneElement","cloneElement","fontSize","clsx"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}