{"version":3,"file":"ImageScq-legacy-Z9vDZY8B.js","sources":["../../src/components/Questions/ImageScq/ImageScq.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./ImageScq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Card, Grid, Radio } from \"@mui/material\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageScq(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      value: questionState?.value || \"\",\n      showValidation:\n        (show_errors || isDirty) && questionState?.validity === false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n  };\n\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing}px`,\n        justifyContent: isRtl ? \"flex-end\" : \"flex-start\",\n      }}\n      className={styles.imageFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        const backgroundImage = option.resources?.image\n          ? `url('${buildResourceUrl(option.resources?.image)}')`\n          : `url('/placeholder-image.jpg')`;\n        return (\n          <Box\n            key={option.code}\n            sx={{\n              flex: `0 1 calc(${100 / props.component.columns}% - ${props.component.spacing}px)`,\n              cursor: \"pointer\",\n            }}\n            onClick={() =>\n              handleChange(props.component.qualifiedCode, option.code)\n            }\n          >\n            <Box\n              className={styles.imageContainer}\n              style={{\n                paddingTop: `${100 / props.component.imageAspectRatio}%`,\n                borderRadius: \"4px\",\n                backgroundImage: backgroundImage,\n                border:\n                  state.value === option.code\n                    ? `4px solid ${theme.palette.primary.main}`\n                    : \"4px solid transparent\",\n              }}\n            >\n              <div className={styles.selection}>\n                <Radio\n                  checked={state.value === option.code}\n                  onChange={(event) =>\n                    handleChange(event.target.name, event.target.value)\n                  }\n                  value={option.code}\n                  className={styles.radioCheck}\n                  name={props.component.qualifiedCode}\n                  size=\"large\"\n                  sx={{\n                    m:'5px',\n                    color: theme.textStyles.text.color,\n                  }}\n                />\n              </div>\n            </Box>\n            {!props.component.hideText && (\n              <Box\n                sx={{\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                  textAlign: \"center\",\n                  marginTop: \"8px\",\n                }}\n              >\n                {option.content?.label}\n              </Box>\n            )}\n          </Box>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default ImageScq;\n"],"names":["ImageScq","props","theme","useTheme","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","value","showValidation","validity","shallowEqual","dispatch","useDispatch","handleChange","componentCode","valueChange","lang","isRtl","rtlLanguage","includes","jsx","Box","sx","gap","spacing","justifyContent","className","styles","imageFlexContainer","children","answers","map","option","_option$resources","_option$resources2","_option$content","backgroundImage","resources","image","buildResourceUrl","jsxs","flex","columns","cursor","onClick","code","imageContainer","style","paddingTop","imageAspectRatio","borderRadius","border","palette","primary","main","selection","Radio","checked","onChange","event","target","name","radioCheck","size","m","color","textStyles","text","hideText","fontFamily","font","fontSize","textAlign","marginTop","content","label"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QASA,SAASA,SAASC,KAAA,EAAO;UACvB,MAAMC,QAAQC,QAAA,CAAA,CAAS;UACvB,MAAMC,KAAA,GAAQC,WAAA,CAAaD,MAAAA,IAAU;YACnC,IAAIE,gBAAgBF,MAAAA,CAAMG,QAAA,CAASC,MAAA,CAAOP,KAAA,CAAMQ,UAAUC,aAAa,CAAA;YACvE,IAAIC,WAAA,GAAcP,MAAAA,CAAMG,QAAA,CAASC,MAAA,CAAOI,MAAA,CAAOD,WAAA;YAC/C,IAAIE,OAAA,GAAUT,MAAAA,CAAMU,aAAA,CAAcb,KAAA,CAAMQ,UAAUC,aAAa,CAAA;YAC/D,OAAO;cACLK,KAAA,EAAO,CAAAT,0BAAAA,oCAAAA,cAAeS,KAAA,KAAS,EAAA;cAC/BC,cAAA,EAAA,CACGL,WAAA,IAAeE,OAAA,KAAY,CAAAP,aAAA,aAAAA,aAAA,uBAAAA,aAAA,CAAeW,QAAA,MAAa;YAAA,CAC5D;UACF,GAAGC,YAAY,CAAA;UACf,MAAMC,WAAWC,WAAA,CAAA,CAAY;UAE7B,MAAMC,YAAA,GAAeA,CAACC,aAAA,EAAeP,KAAA,KAAU;YAC7CI,QAAA,CAASI,WAAA,CAAY;cAAED,aAAA;cAAeP;YAAA,CAAO,CAAC,CAAA;UAChD,CAAA;UAEA,MAAMS,IAAA,GAAOnB,WAAA,CAAaD,MAAAA,IAAU;YAClC,OAAOA,MAAAA,CAAMG,QAAA,CAASC,MAAA,CAAO,QAAQ,CAAA,CAAEgB,IAAA;UACzC,CAAC,CAAA;UACD,MAAMC,KAAA,GAAQC,WAAA,CAAYC,QAAA,CAASH,IAAI,CAAA;UAEvC,sBACEI,iBAAAA,CAAAA,GAAA,CAACC,GAAA,EAAA;YACCC,EAAA,EAAI;cACFC,GAAA,EAAK,GAAG9B,KAAA,CAAMQ,SAAA,CAAUuB,OAAO,IAAA;cAC/BC,cAAA,EAAgBR,QAAQ,UAAA,GAAa;YAAA,CACvC;YACAS,WAAWC,MAAA,CAAOC,kBAAA;YAEjBC,QAAA,EAAApC,KAAA,CAAMQ,SAAA,CAAU6B,OAAA,CAAQC,GAAA,CAAKC,MAAA,IAAW;cAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,eAAA;cACvC,MAAMC,eAAA,GAAkB,CAAAH,iBAAA,GAAAD,MAAA,CAAOK,SAAA,cAAAJ,iBAAA,eAAPA,iBAAA,CAAkBK,KAAA,GACtC,QAAQC,uCAAiBP,MAAA,CAAOK,SAAA,cAAAH,kBAAA,uBAAPA,kBAAA,CAAkBI,KAAK,CAAC,IAAA,GACjD,+BAAA;cACJ,sBACEE,iBAAAA,CAAAA,IAAA,CAACnB,GAAA,EAAA;gBAECC,EAAA,EAAI;kBACFmB,IAAA,EAAM,YAAY,GAAA,GAAMhD,KAAA,CAAMQ,UAAUyC,OAAO,OAAOjD,KAAA,CAAMQ,SAAA,CAAUuB,OAAO,KAAA;kBAC7EmB,MAAA,EAAQ;gBAAA,CACV;gBACAC,SAASA,CAAA,KACP/B,YAAA,CAAapB,MAAMQ,SAAA,CAAUC,aAAA,EAAe8B,OAAOa,IAAI,CAAA;gBAGzDhB,QAAA,EAAA,CAAA,eAAAT,iBAAAA,CAAAA,GAAA,CAACC,GAAA,EAAA;kBACCK,WAAWC,MAAA,CAAOmB,cAAA;kBAClBC,KAAA,EAAO;oBACLC,UAAA,EAAY,GAAG,GAAA,GAAMvD,KAAA,CAAMQ,UAAUgD,gBAAgB,GAAA;oBACrDC,YAAA,EAAc,KAAA;oBACdd,eAAA;oBACAe,MAAA,EACEvD,KAAA,CAAMW,KAAA,KAAUyB,MAAA,CAAOa,IAAA,GACnB,aAAanD,KAAA,CAAM0D,OAAA,CAAQC,OAAA,CAAQC,IAAI,EAAA,GACvC;kBAAA,CACR;kBAEAzB,QAAA,EAAA,eAAAT,iBAAAA,CAAAA,GAAA,CAAC,KAAA,EAAA;oBAAIM,SAAA,EAAWC,MAAA,CAAO4B,SAAA;oBACrB1B,QAAA,iBAAAT,iBAAAA,CAAAA,GAAA,CAACoC,KAAA,EAAA;sBACCC,OAAA,EAAS7D,KAAA,CAAMW,KAAA,KAAUyB,MAAA,CAAOa,IAAA;sBAChCa,QAAA,EAAWC,KAAA,IACT9C,YAAA,CAAa8C,MAAMC,MAAA,CAAOC,IAAA,EAAMF,KAAA,CAAMC,MAAA,CAAOrD,KAAK,CAAA;sBAEpDA,OAAOyB,MAAA,CAAOa,IAAA;sBACdnB,WAAWC,MAAA,CAAOmC,UAAA;sBAClBD,IAAA,EAAMpE,MAAMQ,SAAA,CAAUC,aAAA;sBACtB6D,IAAA,EAAK,OAAA;sBACLzC,EAAA,EAAI;wBACF0C,CAAA,EAAE,KAAA;wBACFC,KAAA,EAAOvE,KAAA,CAAMwE,UAAA,CAAWC,IAAA,CAAKF;sBAAA;oBAC/B,CAAA;kBACF,CACF;gBAAA,CAAA,CACF,EACC,CAACxE,KAAA,CAAMQ,SAAA,CAAUmE,QAAA,mBAChBhD,iBAAAA,CAAAA,GAAA,CAACC,GAAA,EAAA;kBACCC,EAAA,EAAI;oBACF+C,UAAA,EAAY3E,KAAA,CAAMwE,UAAA,CAAWC,IAAA,CAAKG,IAAA;oBAClCL,KAAA,EAAOvE,KAAA,CAAMwE,UAAA,CAAWC,IAAA,CAAKF,KAAA;oBAC7BM,QAAA,EAAU7E,KAAA,CAAMwE,UAAA,CAAWC,IAAA,CAAKJ,IAAA;oBAChCS,SAAA,EAAW,QAAA;oBACXC,SAAA,EAAW;kBAAA,CACb;kBAEC5C,oCAAO6C,OAAA,cAAAvC,eAAA,uCAASwC;gBAAA,CAAA,CAAA;cACnB,CAAA,EAjDG3C,MAAA,CAAOa,IAAA,CAmDd;YAEJ,CAAC;UAAA,CAAA,CACH;QAEJ;;;;"}