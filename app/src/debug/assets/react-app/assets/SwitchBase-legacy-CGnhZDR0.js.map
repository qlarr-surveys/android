{"version":3,"file":"SwitchBase-legacy-CGnhZDR0.js","sources":["../../node_modules/@mui/material/internal/switchBaseClasses.js","../../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","root","capitalize","input","composeClasses","SwitchBaseRoot","styled","ButtonBase","_extends","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","exports","React.forwardRef","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","_props$disableFocusRi","disableFocusRipple","_props$edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","newChecked","target","hasLabelFor","_jsxs","jsxs","component","clsx","centerRipple","focusRipple","role","children","_jsx"],"mappings":"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","x_google_ignoreList":[0,1]}