{"version":3,"file":"ParagraphQuestion-legacy-BxC8omHX.js","sources":["../../src/components/Questions/Paragraph/ParagraphQuestion.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\n\nimport styles from \"./ParagraphQuestion.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport { TextField } from \"@mui/material\";\n\nfunction ParagraphQuestion(props) {\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    let validity = questionState?.validity;\n    let invalid = (show_errors || isDirty) && validity === false;\n    let value = questionState?.value || \"\";\n    return {\n      value: value,\n      wordCount: window.QlarrScripts\n        ? window.QlarrScripts.wordCount(value)\n        : 0,\n      invalid: invalid,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation(\"run\");\n\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n  };\n\n  return (\n    <div className={styles.questionItem}>\n      <TextField\n      size=\"small\"\n        className={styles.paragraph}\n        required={\n          props.component.validation?.validation_required?.isActive\n            ? true\n            : false\n        }\n        multiline\n        id={props.component.qualifiedCode}\n        name={props.component.qualifiedCode}\n        minRows={props.component.minRows || 2}\n        label={(props.component.showHint && props.component.content?.hint )|| \"\"}\n        onChange={handleChange}\n        onBlur={lostFocus}\n        value={state.value}\n      />\n      {props.component.showWordCount ? (\n        <div className={styles.wordCount}>\n          <span>{t(\"word_count\", { count: state.wordCount })}</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default ParagraphQuestion;\n"],"names":["ParagraphQuestion","props","_props$component$vali","_props$component$cont","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","validity","invalid","value","wordCount","window","QlarrScripts","shallowEqual","dispatch","useDispatch","_useTranslation","useTranslation","t","handleChange","event","valueChange","componentCode","target","name","lostFocus","setDirty","jsxs","className","styles","questionItem","children","jsx","TextField","size","paragraph","required","validation","validation_required","isActive","multiline","id","minRows","label","showHint","content","hint","onChange","onBlur","showWordCount","count"],"mappings":"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"}