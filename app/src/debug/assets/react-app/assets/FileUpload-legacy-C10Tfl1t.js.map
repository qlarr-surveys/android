{"version":3,"file":"FileUpload-legacy-C10Tfl1t.js","sources":["../../src/components/Questions/FileUpload/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport { previewUrl, uploadFile } from \"~/networking/run\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ValidationItem from \"~/components/run/ValidationItem\";\nimport { valueChange } from \"~/state/runState\";\nimport { fileTypesToMimesArray } from \"~/constants/validation\";\nimport { setDirty } from \"~/state/templateState\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingDots from \"~/components/common/LoadingDots\";\nimport { useService } from \"~/hooks/use-service\";\n\nconst Input = styled(\"input\")({\n  display: \"none\",\n});\n\nfunction FileUpload(props) {\n  const runService = useService(\"run\");\n  const theme = useTheme();\n\n  const { t } = useTranslation(\"run\");\n\n  let accepted = fileTypesToMimesArray(\n    props.component.validation?.validation_file_types?.fileTypes\n  );\n\n  const maxFileSize =\n    (props.component.validation?.validation_max_file_size?.isActive &&\n      props.component.validation?.validation_max_file_size?.max_size) ||\n    -1;\n\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    return questionState?.value;\n  });\n\n  const preview = useSelector((state) => {\n    return state.runState.preview;\n  });\n\n  const dispatch = useDispatch();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isUploading, setUploading] = useState(false);\n\n  const previewAndroid = () => {\n    window[\"Android\"].previewFileUpload(state.stored_filename, state.filename);\n  };\n\n  const invalidSelectedFile =\n    !isUploading &&\n    selectedFile &&\n    accepted.length > 0 &&\n    !accepted.includes(selectedFile.type);\n\n  const invalidSize =\n    !isUploading &&\n    selectedFile &&\n    maxFileSize > 0 &&\n    selectedFile.size / 1024 > maxFileSize;\n\n  const changeHandler = (event) => {\n    dispatch(setDirty(props.component.qualifiedCode));\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadSelectedFile = () => {\n    setUploading(true);\n    uploadFile(runService, props.component.qualifiedCode, preview, selectedFile)\n      .then((response) => {\n        setUploading(false);\n        resetSelectedFile();\n        dispatch(\n          valueChange({\n            componentCode: props.component.qualifiedCode,\n            value: response,\n          })\n        );\n      })\n      .catch((err) => {\n        setUploading(false);\n        console.error(err);\n      });\n  };\n  const resetSelectedFile = () => {\n    setSelectedFile(undefined);\n  };\n\n  const onButtonClick = (event) => {\n    if (window[\"Android\"]) {\n      const code = props.component.qualifiedCode;\n      event.preventDefault();\n      window[\"Android\"].selectFile(\n        code,\n        accepted?.join(\",\") || \"\",\n        maxFileSize || -1\n      );\n      window[\"onFileSelected\" + code] = (name, size, type) => {\n        dispatch(setDirty(props.component.qualifiedCode));\n        setSelectedFile({ name, size, type });\n      };\n    }\n  };\n\n  let shouldUpload = selectedFile && !invalidSelectedFile && !invalidSize;\n\n  return (\n    <div>\n      <label htmlFor=\"contained-button-file\">\n        <Input\n          id=\"contained-button-file\"\n          type=\"file\"\n          accept={accepted ? accepted.join(\",\") : undefined}\n          onChange={changeHandler}\n        />\n        <Button\n          disabled={isUploading}\n          onClick={onButtonClick}\n          variant=\"contained\"\n          component=\"span\"\n        >\n          {t(\"choose_file\")}\n        </Button>\n      </label>\n      {!selectedFile ? (\n        \"\"\n      ) : (\n        <React.Fragment>\n          <span>\n            &nbsp;{selectedFile.name} - {Math.round(selectedFile.size / 1024)}K\n          </span>\n          {shouldUpload ? (\n            <Button\n              disabled={isUploading}\n              variant=\"text\"\n              onClick={uploadSelectedFile}\n            >\n              {t(\"upload\")}\n            </Button>\n          ) : (\n            \"\"\n          )}\n          <Button\n            disabled={isUploading}\n            sx={{\n              fontFamily: theme.textStyles.text.font,\n              fontSize: theme.textStyles.text.size,\n            }}\n            variant=\"text\"\n            onClick={resetSelectedFile}\n          >\n            {t(\"cancel\")}\n          </Button>\n        </React.Fragment>\n      )}\n\n      {invalidSize && (\n        <React.Fragment>\n          <br />\n          <ValidationItem\n            name=\"validation_max_file_size\"\n            validation={props.component.validation?.validation_max_file_size}\n          />\n        </React.Fragment>\n      )}\n\n      {invalidSelectedFile && (\n        <React.Fragment>\n          <br />\n          <ValidationItem\n            name=\"validation_file_types\"\n            validation={props.component.validation?.validation_file_types}\n          />\n        </React.Fragment>\n      )}\n\n      {isUploading ? (\n        <div style={{ textAlign: \"center\" }}>\n          <LoadingDots />\n          <br />\n          <span>{t(\"uploading\")}</span>\n        </div>\n      ) : !state || !state.stored_filename ? (\n        \"\"\n      ) : (\n        <React.Fragment>\n          <br />\n          <br />\n          {window[\"Android\"] ? (\n            <Link target=\"_blank\" onClick={previewAndroid}>\n              {state.filename} - {Math.round(state.size / 1024)}K\n            </Link>\n          ) : (\n            <Link target=\"_blank\" href={previewUrl(state.stored_filename)}>\n              {state.filename} - {Math.round(state.size / 1024)}K\n            </Link>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default FileUpload;\n"],"names":["Input","styled","display","FileUpload","props","_props$component$vali","_props$component$vali2","_props$component$vali3","_props$component$vali4","_props$component$vali5","runService","useService","theme","useTheme","_useTranslation","useTranslation","t","accepted","fileTypesToMimesArray","component","validation","validation_file_types","fileTypes","maxFileSize","validation_max_file_size","isActive","max_size","state","useSelector","questionState","runState","values","qualifiedCode","value","preview","dispatch","useDispatch","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","selectedFile","setSelectedFile","_reactExports$useStat3","_reactExports$useStat4","isUploading","setUploading","previewAndroid","window","previewFileUpload","stored_filename","filename","invalidSelectedFile","length","includes","type","invalidSize","size","changeHandler","event","setDirty","target","files","uploadSelectedFile","uploadFile","then","response","resetSelectedFile","valueChange","componentCode","catch","err","console","error","onButtonClick","code","preventDefault","selectFile","join","name","shouldUpload","children","jsxs","htmlFor","jsx","id","accept","onChange","Button","disabled","onClick","variant","React","Fragment","Math","round","sx","fontFamily","textStyles","text","font","fontSize","ValidationItem","style","textAlign","LoadingDots","Link","href","previewUrl"],"mappings":"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"}