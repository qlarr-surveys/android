{"version":3,"file":"FileUpload-G55TD9jo.js","sources":["../../src/components/Questions/FileUpload/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport { previewUrl, uploadFile } from \"~/networking/run\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ValidationItem from \"~/components/run/ValidationItem\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingDots from \"~/components/common/LoadingDots\";\nimport { useService } from \"~/hooks/use-service\";\nimport { fileTypesToMimesArray } from '~/state/design/addInstructions';\n\nconst Input = styled(\"input\")({\n  display: \"none\",\n});\n\nfunction FileUpload(props) {\n  const runService = useService(\"run\");\n  const theme = useTheme();\n\n  const { t } = useTranslation(\"run\");\n\n  let accepted = fileTypesToMimesArray(\n    props.component.validation?.validation_file_types?.fileTypes\n  );\n\n  const maxFileSize =\n    (props.component.validation?.validation_max_file_size?.isActive &&\n      props.component.validation?.validation_max_file_size?.max_size) ||\n    -1;\n\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    return questionState?.value;\n  });\n\n  const preview = useSelector((state) => {\n    return state.runState.preview;\n  });\n\n  const dispatch = useDispatch();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isUploading, setUploading] = useState(false);\n\n  const previewAndroid = () => {\n    window[\"Android\"].previewFileUpload(state.stored_filename, state.filename);\n  };\n\n  const invalidSelectedFile =\n    !isUploading &&\n    selectedFile &&\n    accepted.length > 0 &&\n    !accepted.includes(selectedFile.type);\n\n  const invalidSize =\n    !isUploading &&\n    selectedFile &&\n    maxFileSize > 0 &&\n    selectedFile.size / 1024 > maxFileSize;\n\n  const changeHandler = (event) => {\n    dispatch(setDirty(props.component.qualifiedCode));\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadSelectedFile = () => {\n    setUploading(true);\n    uploadFile(runService, props.component.qualifiedCode, preview, selectedFile)\n      .then((response) => {\n        setUploading(false);\n        resetSelectedFile();\n        dispatch(\n          valueChange({\n            componentCode: props.component.qualifiedCode,\n            value: response,\n          })\n        );\n      })\n      .catch((err) => {\n        setUploading(false);\n        console.error(err);\n      });\n  };\n  const resetSelectedFile = () => {\n    setSelectedFile(undefined);\n  };\n\n  const onButtonClick = (event) => {\n    if (window[\"Android\"]) {\n      const code = props.component.qualifiedCode;\n      event.preventDefault();\n      window[\"Android\"].selectFile(\n        code,\n        accepted?.join(\",\") || \"\",\n        maxFileSize || -1\n      );\n      window[\"onFileSelected\" + code] = (name, size, type) => {\n        dispatch(setDirty(props.component.qualifiedCode));\n        setSelectedFile({ name, size, type });\n      };\n    }\n  };\n\n  let shouldUpload = selectedFile && !invalidSelectedFile && !invalidSize;\n\n  return (\n    <div>\n      <label htmlFor=\"contained-button-file\">\n        <Input\n          id=\"contained-button-file\"\n          type=\"file\"\n          accept={accepted ? accepted.join(\",\") : undefined}\n          onChange={changeHandler}\n        />\n        <Button\n          disabled={isUploading}\n          onClick={onButtonClick}\n          variant=\"contained\"\n          component=\"span\"\n        >\n          {t(\"choose_file\")}\n        </Button>\n      </label>\n      {!selectedFile ? (\n        \"\"\n      ) : (\n        <React.Fragment>\n          <span>\n            &nbsp;{selectedFile.name} - {Math.round(selectedFile.size / 1024)}K\n          </span>\n          {shouldUpload ? (\n            <Button\n              disabled={isUploading}\n              variant=\"text\"\n              onClick={uploadSelectedFile}\n            >\n              {t(\"upload\")}\n            </Button>\n          ) : (\n            \"\"\n          )}\n          <Button\n            disabled={isUploading}\n            sx={{\n              fontFamily: theme.textStyles.text.font,\n              fontSize: theme.textStyles.text.size,\n            }}\n            variant=\"text\"\n            onClick={resetSelectedFile}\n          >\n            {t(\"cancel\")}\n          </Button>\n        </React.Fragment>\n      )}\n\n      {invalidSize && (\n        <React.Fragment>\n          <br />\n          <ValidationItem\n            name=\"validation_max_file_size\"\n            validation={props.component.validation?.validation_max_file_size}\n          />\n        </React.Fragment>\n      )}\n\n      {invalidSelectedFile && (\n        <React.Fragment>\n          <br />\n          <ValidationItem\n            name=\"validation_file_types\"\n            validation={props.component.validation?.validation_file_types}\n          />\n        </React.Fragment>\n      )}\n\n      {isUploading ? (\n        <div style={{ textAlign: \"center\" }}>\n          <LoadingDots />\n          <br />\n          <span>{t(\"uploading\")}</span>\n        </div>\n      ) : !state || !state.stored_filename ? (\n        \"\"\n      ) : (\n        <React.Fragment>\n          <br />\n          <br />\n          {window[\"Android\"] ? (\n            <Link target=\"_blank\" onClick={previewAndroid}>\n              {state.filename} - {Math.round(state.size / 1024)}K\n            </Link>\n          ) : (\n            <Link target=\"_blank\" href={previewUrl(state.stored_filename)}>\n              {state.filename} - {Math.round(state.size / 1024)}K\n            </Link>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default FileUpload;\n"],"names":["state","useState","jsxs","jsx"],"mappings":"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"}