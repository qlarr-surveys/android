{"version":3,"file":"ImageMcq-legacy-CjT53uQz.js","sources":["../../src/components/Questions/ImageMcq/ImageMcq.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Card, Checkbox, Grid } from \"@mui/material\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport styles from \"./ImageMcq.module.css\";\nimport { setDirty } from \"~/state/templateState\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageMcq(props) {\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing}px`,\n        justifyContent: isRtl ? \"flex-end\" : \"flex-start\",\n      }}\n      className={styles.imageFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        return (\n          <ImageMcqItem\n            option={option}\n            aspectRatio={props.component.imageAspectRatio}\n            columns={props.component.columns || 3}\n            spacing={props.component.spacing || 8}\n            hideText={props.component.hideText}\n            parentCode={props.component.qualifiedCode}\n            key={option.qualifiedCode}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nfunction ImageMcqItem(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let answerState = state.runState.values[props.option.qualifiedCode];\n    return {\n      showAnswer:\n        typeof answerState?.relevance == \"undefined\" || answerState.relevance,\n      checked: answerState?.value || false,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n    dispatch(setDirty(componentCode));\n    dispatch(setDirty(props.parentCode));\n  };\n  const backgroundImage = props.option.resources?.image\n    ? `url('${buildResourceUrl(props.option.resources?.image)}')`\n    : `url('/placeholder-image.jpg')`;\n\n  return (\n    <Box\n      key={props.option.code}\n      sx={{\n        flex: `0 1 calc(${100 / props.columns}% - ${props.spacing}px)`,\n        cursor: \"pointer\",\n      }}\n    >\n      <Box\n        className={styles.imageContainer}\n        onClick={() => handleChange(props.option.qualifiedCode, !state.checked)}\n        style={{\n          paddingTop: 100 / props.aspectRatio + \"%\",\n          backgroundImage: backgroundImage,\n          borderRadius: \"4px\",\n          border: state.checked\n            ? `4px solid ${theme.palette.primary.main}`\n            : \"4px solid transparent\",\n        }}\n      >\n        <div className={styles.selection}>\n          <Checkbox\n            onChange={(event) =>\n              handleChange(props.option.qualifiedCode, !state.checked)\n            }\n            size=\"large\"\n            sx={{\n              m: \"5px\",\n            }}\n            className={styles.radioCheck}\n            checked={state.checked}\n          />\n        </div>\n      </Box>\n      {!props.hideText && (\n        <Box\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {props.option.content?.label}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default ImageMcq;\n"],"names":["ImageMcq","props","lang","useSelector","state","runState","values","isRtl","rtlLanguage","includes","jsx","Box","sx","gap","component","spacing","justifyContent","className","styles","imageFlexContainer","children","answers","map","option","ImageMcqItem","aspectRatio","imageAspectRatio","columns","hideText","parentCode","qualifiedCode","_props$option$resourc","_props$option$resourc2","_props$option$content","theme","useTheme","answerState","showAnswer","relevance","checked","value","shallowEqual","dispatch","useDispatch","handleChange","componentCode","valueChange","setDirty","backgroundImage","resources","image","buildResourceUrl","jsxs","flex","cursor","imageContainer","onClick","style","paddingTop","borderRadius","border","palette","primary","main","selection","Checkbox","onChange","event","size","m","radioCheck","fontFamily","textStyles","text","font","color","fontSize","content","label","code"],"mappings":"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"}