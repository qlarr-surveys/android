{"version":3,"file":"index-D2Y_Voyn.js","sources":["../../src/pages/manage/ResetPassword/index.jsx"],"sourcesContent":["import * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport Link from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport RouterLink from \"~/components/router/router-link\";\nimport Iconify from \"~/components/iconify\";\nimport Image from \"~/components/image/image\";\nimport FormProvider, { RHFTextField } from \"../../../components/hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InputAdornment } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useBoolean } from \"~/hooks/use-boolean\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { routes } from \"~/routes\";\nimport { useService } from \"~/hooks/use-service\";\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPasswordView({ confirmNewUser = false }) {\n  const authService = useService(\"auth\");\n  const { t } = useTranslation(\"manage\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const passwordShow = useBoolean();\n  const [searchParams] = useSearchParams();\n  const { token } = useParams();\n\n  const refreshToken = searchParams.get(\"token\");\n\n  const ResetPasswordSchema = Yup.object().shape({\n    password: Yup.string()\n      .required(t(\"password_required\"))\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/,\n        t(\"error.invalid_password\")\n      ),\n    confirmPassword: Yup.string()\n      .required(t(\"password_required\"))\n      .oneOf([Yup.ref(\"password\")], t(\"error.password_should_match\")),\n  });\n\n  const defaultValues = {\n    email: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ResetPasswordSchema),\n    defaultValues,\n  });\n\n  const {\n    setError,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await authService.resetPassword(\n        confirmNewUser,\n        confirmNewUser ? token : refreshToken,\n        data.password\n      );\n      navigate(\"/\");\n    } catch (processedError) {\n      setError(\"password\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n      setError(\"confirmPassword\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n    } finally {\n      dispatch(setLoading(false));\n    }\n  });\n\n  return (\n    <>\n      <Stack\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{\n          px: 2,\n          py: 12,\n          minHeight: \"100vh\",\n        }}\n      >\n        <Stack\n          spacing={4}\n          sx={{\n            p: 4,\n            width: 1,\n            mx: \"auto\",\n            flexShrink: 0,\n            maxWidth: 400,\n            borderRadius: 2,\n            bgcolor: \"background.default\",\n            boxShadow: theme.customShadows.z24,\n            textAlign: { xs: \"center\", md: \"left\" },\n          }}\n        >\n          <Stack sx={{ textAlign: \"center\" }}>\n            <Image\n              alt=\"reset password\"\n              src=\"/ic_lock_password.svg\"\n              sx={{ mb: 5, width: 96, height: 96, mx: \"auto\" }}\n            />\n\n            <Typography variant=\"h3\" paragraph>\n              {t(\"reset_password.title\")}\n            </Typography>\n\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={2.5}>\n                <RHFTextField\n                  name=\"password\"\n                  label={t(\"label.new_password\")}\n                  type={passwordShow.value ? \"text\" : \"password\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={passwordShow.onToggle} edge=\"end\">\n                          <Iconify\n                            icon={\n                              passwordShow.value\n                                ? \"carbon:view\"\n                                : \"carbon:view-off\"\n                            }\n                          />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <RHFTextField\n                  name=\"confirmPassword\"\n                  label={t(\"label.confirm_new_password\")}\n                  type={passwordShow.value ? \"text\" : \"password\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={passwordShow.onToggle} edge=\"end\">\n                          <Iconify\n                            icon={\n                              passwordShow.value\n                                ? \"carbon:view\"\n                                : \"carbon:view-off\"\n                            }\n                          />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Stack>\n\n              <LoadingButton\n                fullWidth\n                size=\"large\"\n                color=\"primary\"\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n                sx={{ mt: 2.5 }}\n              >\n                {t(\"reset_password.reset\")}\n              </LoadingButton>\n            </FormProvider>\n\n            <Link\n              component={RouterLink}\n              href={routes.login}\n              color=\"inherit\"\n              variant=\"subtitle2\"\n              sx={{\n                mt: 3,\n                mx: \"auto\",\n                alignItems: \"center\",\n                display: \"inline-flex\",\n              }}\n            >\n              <Iconify icon=\"carbon:chevron-left\" width={16} sx={{ mr: 1 }} />\n              {t(\"forgot_password.return_to_signin\")}\n            </Link>\n          </Stack>\n        </Stack>\n      </Stack>\n    </>\n  );\n}\n"],"names":["Yup.object","Yup.string","Yup.ref","yupResolver","jsx","Fragment","jsxs"],"mappings":"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"}