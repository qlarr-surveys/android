{"version":3,"file":"SwitchBase-legacy-BFGYCTvo.js","sources":["../../node_modules/@mui/material/internal/switchBaseClasses.js","../../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase, {\n  name: 'MuiSwitchBase'\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  name: 'MuiSwitchBase',\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","root","capitalize","input","composeClasses","SwitchBaseRoot","styled","ButtonBase","name","_extends","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React.forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","_props$disableFocusRi","disableFocusRipple","_props$edge","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","newChecked","target","hasLabelFor","_jsxs","component","clsx","centerRipple","focusRipple","role","children","_jsx"],"mappings":"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","x_google_ignoreList":[0,1]}