{"version":3,"file":"common-BgJdLjBL.js","sources":["../../src/networking/common.js"],"sourcesContent":["import {\n  BACKEND_BASE_URL,\n  CLOUD_URL,\n  FRONT_END_HOST,\n  PROTOCOL,\n} from \"~/constants/networking\";\n\nexport const buildResourceUrl = (fileName, surveyId = null, example = null) => {\n\n  if (!surveyId) {\n    surveyId = sessionStorage.getItem(\"surveyId\");\n  }\n  if (example == null) {\n    example = sessionStorage.getItem(\"isGuest\") == 1;\n  }\n  if(example){\n    return `${CLOUD_URL}/survey/${surveyId}/resource/${fileName}`;\n  } else {\n    return `${BACKEND_BASE_URL}/survey/${surveyId}/resource/${fileName}`;\n  }\n\n};\n\n\nexport const sharingUrl = (surveyId, preview, lang) => {\n  let segment = \"run-survey\";\n  if (preview) {\n    segment = \"preview-survey\";\n  }\n  let searchParams = \"\";\n  if (lang) {\n    searchParams = `?lang=${lang}`;\n  }\n  return `${PROTOCOL}://${FRONT_END_HOST}/${segment}/${surveyId}${searchParams}`;\n};\n\nexport async function getFileFromPath(filePath) {\n  const response = await fetch(filePath);\n  const blob = await response.blob();\n  const fileName = filePath.substring(filePath.lastIndexOf(\"/\") + 1);\n  return new File([blob], fileName);\n}\n"],"names":[],"mappings":";AAOY,MAAC,mBAAmB,CAAC,UAAU,WAAW,MAAM,UAAU,SAAS;AAE7E,MAAI,CAAC,UAAU;AACb,eAAW,eAAe,QAAQ,UAAU;AAAA,EAC7C;AACD,MAAI,WAAW,MAAM;AACnB,cAAU,eAAe,QAAQ,SAAS,KAAK;AAAA,EAChD;AACD,MAAG,SAAQ;AACT,WAAO,GAAG,kBAAS,YAAW,iBAAQ,cAAa;AAAA,EACvD,OAAS;AACL,WAAO,GAAG,yBAAgB,YAAW,iBAAQ,cAAa;AAAA,EAC3D;AAEH;AAGY,MAAC,aAAa,CAAC,UAAU,SAAS,SAAS;AACrD,MAAI,UAAU;AAId,MAAI,eAAe;AAInB,SAAO,GAAG,iBAAQ,OAAM,uBAAc,KAAI,gBAAO,KAAI,iBAAW;AAClE;AAEO,eAAe,gBAAgB,UAAU;AAC9C,QAAM,WAAW,MAAM,MAAM,QAAQ;AACrC,QAAM,OAAO,MAAM,SAAS;AAC5B,QAAM,WAAW,SAAS,UAAU,SAAS,YAAY,GAAG,IAAI,CAAC;AACjE,SAAO,IAAI,KAAK,CAAC,IAAI,GAAG,QAAQ;AAClC;"}