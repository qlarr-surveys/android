{"version":3,"file":"ParagraphQuestion-legacy-Bqq_qWNV.js","sources":["../../src/components/Questions/Paragraph/ParagraphQuestion.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\n\nimport styles from \"./ParagraphQuestion.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport { TextField } from \"@mui/material\";\n\nfunction ParagraphQuestion(props) {\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    let validity = questionState?.validity;\n    let invalid = (show_errors || isDirty) && validity === false;\n    let value = questionState?.value || \"\";\n    return {\n      value: value,\n      wordCount: window.QlarrScripts\n        ? window.QlarrScripts.wordCount(value)\n        : 0,\n      invalid: invalid,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation(\"run\");\n\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n  };\n\n  return (\n    <div className={styles.questionItem}>\n      <TextField\n        className={styles.paragraph}\n        required={\n          props.component.validation?.validation_required?.isActive\n            ? true\n            : false\n        }\n        multiline\n        id={props.component.qualifiedCode}\n        name={props.component.qualifiedCode}\n        minRows={props.component.minRows || 2}\n        label={(props.component.showHint && props.component.content?.hint )|| \"\"}\n        onChange={handleChange}\n        onBlur={lostFocus}\n        value={state.value}\n      />\n      {props.component.showWordCount ? (\n        <div className={styles.wordCount}>\n          <span>{t(\"word_count\", { count: state.wordCount })}</span>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default ParagraphQuestion;\n"],"names":["ParagraphQuestion","props","_props$component$vali","_props$component$cont","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","validity","invalid","value","wordCount","window","QlarrScripts","shallowEqual","dispatch","useDispatch","_useTranslation","useTranslation","t","handleChange","event","valueChange","componentCode","target","name","lostFocus","setDirty","jsxs","className","styles","questionItem","children","jsx","TextField","paragraph","required","validation","validation_required","isActive","multiline","id","minRows","label","showHint","content","hint","onChange","onBlur","showWordCount","count"],"mappings":"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"}