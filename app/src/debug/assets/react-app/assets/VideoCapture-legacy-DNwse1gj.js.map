{"version":3,"file":"VideoCapture-legacy-DNwse1gj.js","sources":["../../src/components/Questions/VideoCapture/VideoCapture.jsx"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { previewUrlByFilename, uploadFile } from \"~/networking/run\";\nimport { valueChange } from \"~/state/runState\";\nimport styles from \"./VideoCapture.module.css\";\nimport ReactPlayer from \"react-player\";\nimport { getFileFromPath } from \"~/networking/common\";\nimport { useService } from \"~/hooks/use-service\";\n\nfunction VideoCapture(props) {\n  const runService = useService(\"run\");\n\n  const component = props.component;\n  const state = useSelector((state) => {\n    return state.runState.values[component.qualifiedCode];\n  });\n  const preview = useSelector((state) => {\n    return state.runState.preview;\n  });\n\n  const mode = useSelector((state) => {\n    return state.runState.values.Survey.mode;\n  });\n\n  const dispatch = useDispatch();\n\n  const onImageClick = () => {\n    const code = component.qualifiedCode;\n    const validationMaxSize =\n      (component.validation?.validation_max_file_size?.isActive &&\n        component.validation?.validation_max_file_size?.max_size) ||\n      -1;\n    \n    // Limit to validation value or 10MB (10240 KB), whichever is smaller\n    const IMAGE_MAX_SIZE_KB = 10240; // 10MB\n    const maxFileSize = validationMaxSize > 0 \n      ? Math.min(validationMaxSize, IMAGE_MAX_SIZE_KB)\n      : IMAGE_MAX_SIZE_KB;\n    \n    if (preview && mode == \"offline\") {\n      getFileFromPath(\"/dummy_video.mp4\").then((response) => {\n        uploadFile(runService, code, preview, response)\n          .then((response) => {\n            dispatch(\n              valueChange({\n                componentCode: props.component.qualifiedCode,\n                value: response,\n              })\n            );\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      });\n    } else if (window[\"Android\"]) {\n      window[\"Android\"].captureVideo(code, maxFileSize);\n      window[\"onVideoCaptured\" + code] = (value) => {\n        dispatch(\n          valueChange({\n            componentCode: code,\n            value,\n          })\n        );\n      };\n    } else {\n      console.debug(\"no android device!!\");\n    }\n  };\n\n  return (\n    <Box className={styles.container}>\n      {!state.value || !state.value.stored_filename ? (\n        <img\n          onClick={onImageClick}\n          src=\"/video.png\"\n          style={{\n            maxHeight: \"200px\",\n          }}\n        />\n      ) : (\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"16px\",\n            // 16:9 aspect ratio\n            paddingTop: \"56%\",\n          }}\n        >\n          <ReactPlayer\n            url={previewUrlByFilename(state.value.stored_filename)}\n            loop={false}\n            light={true}\n            controls={true}\n            config={{\n              forceAudio: false,\n            }}\n            style={{\n              backgroundColor: \"black\",\n              position: \"absolute\",\n              top: \"0\",\n              left: \"0\",\n            }}\n            volume={1}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </div>\n      )}\n      <br />\n      {component.showHint && <span>{component.content?.hint}</span>}\n    </Box>\n  );\n}\n\nexport default VideoCapture;\n"],"names":["VideoCapture","props","_component$content","runService","useService","component","state","useSelector","runState","values","qualifiedCode","preview","mode","Survey","dispatch","useDispatch","onImageClick","_component$validation","_component$validation2","code","validationMaxSize","validation","validation_max_file_size","isActive","max_size","IMAGE_MAX_SIZE_KB","maxFileSize","Math","min","getFileFromPath","then","response","uploadFile","valueChange","componentCode","value","catch","err","console","error","window","captureVideo","debug","jsxs","Box","className","styles","container","children","stored_filename","jsx","onClick","src","style","maxHeight","position","marginTop","paddingTop","ReactPlayer","url","previewUrlByFilename","loop","light","controls","config","forceAudio","backgroundColor","top","left","volume","width","height","showHint","content","hint"],"mappings":"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"}