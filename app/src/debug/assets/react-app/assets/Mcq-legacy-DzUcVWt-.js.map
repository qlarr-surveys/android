{"version":3,"file":"Mcq-legacy-DzUcVWt-.js","sources":["../../src/components/Questions/Mcq/MCQAnswer.jsx","../../src/components/Questions/Mcq/Mcq.jsx"],"sourcesContent":["\n\nimport React, { memo } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { Box } from \"@mui/material\";\nimport { setDirty } from \"~/state/templateState\";\n\nfunction McqAnswer(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let answerState = state.runState.values[props.Answer?.qualifiedCode];\n    return {\n      showAnswer:\n        typeof answerState?.relevance == \"undefined\" || answerState.relevance,\n      checked: answerState?.value || false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.checked,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n  };\n\n  return state.showAnswer ? (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={state.checked}\n          onChange={handleChange}\n          name={props.Answer.qualifiedCode}\n          sx={{\n            color: theme.textStyles.text.color,\n          }}\n        />\n      }\n      label={\n        <Box\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {props.Answer.content?.label}\n        </Box>\n      }\n    />\n  ) : (\n    \"\"\n  );\n}\n\nexport default memo(McqAnswer);\n","import FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/RadioGroup\";\n\nimport React, { memo, useRef } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Validation from \"~/components/run/Validation\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport MCQAnswer from \"./MCQAnswer\";\n\nfunction MCQ(props) {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        {props.component.answers.map((option) => {\n          if (option.type === \"other\") {\n            return (\n              <McqAnswerOther\n                key={option.qualifiedCode}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          } else {\n            return (\n              <MCQAnswer\n                key={option.qualifiedCode}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          }\n        })}\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nfunction McqAnswerOther(props) {\n  const theme = useTheme();\n  const nestedTextChild = props.Answer.answers[0];\n  const state = useSelector((state) => {\n    let own = state.runState.values[props.Answer.qualifiedCode];\n    let textChild = state.runState.values[nestedTextChild.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isChildDirty = state.templateState[nestedTextChild.qualifiedCode];\n    return {\n      showAnswer: typeof own?.relevance === \"undefined\" || own.relevance,\n      childInvalid:\n        (show_errors || isChildDirty) &&\n        textChild?.relevance === true &&\n        textChild?.validity === false,\n      checked: own?.value || false,\n      textValue: textChild?.value || \"\",\n      textRelevance: state.textChild?.relevance,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const onButtonClick = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.checked,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n    if (event.target.checked) {\n      textInput.current.focus();\n    }\n  };\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const textInput = useRef();\n  const handleFocus = (event) => {\n    dispatch(\n      valueChange({ componentCode: props.Answer.qualifiedCode, value: true })\n    );\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n  };\n\n  const showAnswer = () => {\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checked}\n            onChange={onButtonClick}\n            name={props.Answer.qualifiedCode}\n            sx={{\n              color: theme.textStyles.text.color,\n            }}\n          />\n        }\n        label={\n          <div className=\"w-100\">\n            <TextField\n              variant=\"standard\"\n              required={\n                state.textRelevance && nestedTextChild.validation?.required\n              }\n              inputRef={textInput}\n              id={nestedTextChild.qualifiedCode}\n              name={nestedTextChild.qualifiedCode}\n              label={props.Answer.content?.label}\n              onChange={handleChange}\n              onFocus={handleFocus}\n              onBlur={lostFocus}\n              sx={{\n                label: { color: theme.textStyles.text.color },\n              }}\n              value={state.textValue}\n              InputProps={{\n                sx: {\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                },\n              }}\n              helperText={\n                state.childInvalid ? (\n                  <Validation component={nestedTextChild} limit={1} />\n                ) : (\n                  \"\"\n                )\n              }\n            />\n          </div>\n        }\n      />\n    );\n  };\n\n  return state.showAnswer ? showAnswer() : \"\";\n}\n\nexport default memo(MCQ);\n"],"names":["McqAnswer","props","_props$Answer$content","theme","useTheme","state","useSelector","_props$Answer","answerState","runState","values","Answer","qualifiedCode","showAnswer","relevance","checked","value","shallowEqual","dispatch","useDispatch","handleChange","event","valueChange","componentCode","target","name","setDirty","parentCode","jsx","FormControlLabel","control","Checkbox","onChange","sx","color","textStyles","text","label","Box","fontFamily","font","fontSize","size","children","content","memo","MCQ","FormControl","component","FormGroup","answers","map","option","type","McqAnswerOther","MCQAnswer","nestedTextChild","_state2$textChild","own","textChild","show_errors","Survey","isChildDirty","templateState","childInvalid","validity","textValue","textRelevance","onButtonClick","textInput","current","focus","useRef","handleFocus","lostFocus","_nestedTextChild$vali","_props$Answer$content2","className","TextField","variant","required","validation","inputRef","id","onFocus","onBlur","InputProps","helperText","Validation","limit"],"mappings":"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"}