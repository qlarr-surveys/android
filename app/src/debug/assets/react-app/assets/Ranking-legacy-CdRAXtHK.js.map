{"version":3,"file":"Ranking-legacy-CdRAXtHK.js","sources":["../../src/components/Questions/Ranking/Ranking.jsx"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport React, { Fragment, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport styles from \"./Ranking.module.css\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { orderChange, valueChange } from \"~/state/runState\";\n\nfunction Ranking(props) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      valuesMap[element.qualifiedCode] =\n        state.runState.values[element.qualifiedCode].value;\n    });\n    return valuesMap;\n  }, shallowEqual);\n\n  const itemTypeByCode = (code) => {\n    return isNaN(state[code]) ? \"unsorted\" : \"sorted\";\n  };\n\n  const order = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      if (state.runState.order) {\n        valuesMap[element.qualifiedCode] =\n          state.runState.order[element.qualifiedCode];\n      } else {\n        valuesMap[element.qualifiedCode] =\n          state.runState.values[element.qualifiedCode].order + 1;\n      }\n    });\n    return valuesMap;\n  }, shallowEqual);\n\n  const withoutOrder = props.component.answers\n    .filter((option) => !state[option.qualifiedCode])\n    .sort(function (a, b) {\n      return order[a.qualifiedCode] - order[b.qualifiedCode];\n    });\n\n  const withOrder = props.component.answers\n    .filter((option) => +state[option.qualifiedCode] > 0)\n    .sort(function (a, b) {\n      return state[a.qualifiedCode] - state[b.qualifiedCode];\n    });\n\n  const onItemTransfer = (item, index, itemType) => {\n    const unOrdered = { ...order };\n    if (\n      itemType == \"sorted\" &&\n      itemTypeByCode(item.qualifiedCode) == \"unsorted\"\n    ) {\n      const currentOrder = index + 1;\n      for (let key in state) {\n        if (state.hasOwnProperty(key)) {\n          if (state[key] >= currentOrder) {\n            dispatch(\n              valueChange({\n                componentCode: key,\n                value: state[key] + 1,\n              })\n            );\n          }\n        }\n      }\n      dispatch(\n        valueChange({\n          componentCode: item.qualifiedCode,\n          value: currentOrder,\n        })\n      );\n      item.index = index;\n\n      const oldOrder = unOrdered[item.qualifiedCode];\n      withoutOrder.forEach((item) => {\n        if (unOrdered[item.qualifiedCode] >= oldOrder) {\n          unOrdered[item.qualifiedCode] = unOrdered[item.qualifiedCode] - 1;\n        }\n      });\n\n      dispatch(orderChange(unOrdered));\n    } else if (\n      itemType == \"unsorted\" &&\n      itemTypeByCode(item.qualifiedCode) == \"sorted\"\n    ) {\n      const currentOrder = state[item.qualifiedCode];\n      for (let key in state) {\n        if (state.hasOwnProperty(key)) {\n          if (state[key] >= currentOrder) {\n            dispatch(\n              valueChange({\n                componentCode: key,\n                value: state[key] - 1,\n              })\n            );\n          }\n        }\n      }\n      dispatch(\n        valueChange({\n          componentCode: item.qualifiedCode,\n          value: undefined,\n        })\n      );\n      item.index = index;\n\n      const oldOrder = index + 1;\n\n      withoutOrder.forEach((item) => {\n        if (unOrdered[item.qualifiedCode] >= oldOrder) {\n          unOrdered[item.qualifiedCode] = unOrdered[item.qualifiedCode] + 1;\n        }\n      });\n      unOrdered[item.qualifiedCode] = oldOrder;\n      dispatch(orderChange(unOrdered));\n    }\n  };\n\n  const onDoubleClick = (item) => {\n    if (itemTypeByCode(item.qualifiedCode) == \"unsorted\") {\n      onItemTransfer(item, withOrder.length, \"sorted\");\n    } else {\n      onItemTransfer(item, withoutOrder.length, \"unsorted\");\n    }\n  };\n\n  const onHover = (\n    hoveringItem,\n    currentItem,\n    currentItemType,\n    currentItemIndex\n  ) => {\n    const unOrdered = { ...order };\n    if (\n      currentItemType == \"unsorted\" &&\n      itemTypeByCode(hoveringItem.qualifiedCode) == \"unsorted\"\n    ) {\n      const hoveringOrder = unOrdered[hoveringItem.qualifiedCode];\n      unOrdered[hoveringItem.qualifiedCode] =\n        unOrdered[currentItem.qualifiedCode];\n      unOrdered[currentItem.qualifiedCode] = hoveringOrder;\n      dispatch(orderChange(unOrdered));\n      hoveringItem.index = currentItemIndex;\n    } else if (\n      currentItemType == \"sorted\" &&\n      itemTypeByCode(hoveringItem.qualifiedCode) == \"sorted\"\n    ) {\n      dispatch(\n        valueChange({\n          componentCode: hoveringItem.qualifiedCode,\n          value: state[currentItem.qualifiedCode],\n        })\n      );\n      dispatch(\n        valueChange({\n          componentCode: currentItem.qualifiedCode,\n          value: state[hoveringItem.qualifiedCode],\n        })\n      );\n      hoveringItem.index = currentItemIndex;\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n      }}\n    >\n      <RankingContainer\n        styles={styles}\n        ordererLength={withOrder.length}\n        unordererLength={withoutOrder.length}\n        onHover={onHover}\n        order={order}\n        onItemTransfer={onItemTransfer}\n        onDoubleClick={onDoubleClick}\n        itemType=\"unsorted\"\n        options={withoutOrder}\n      />\n      <RankingContainer\n        styles={styles}\n        onHover={onHover}\n        onItemTransfer={onItemTransfer}\n        onDoubleClick={onDoubleClick}\n        ordererLength={withOrder.length}\n        unordererLength={withoutOrder.length}\n        order={order}\n        itemType=\"sorted\"\n        options={withOrder}\n      />\n    </div>\n  );\n}\n\nfunction RankingContainer({\n  styles,\n  itemType,\n  options,\n  onItemTransfer,\n  onDoubleClick,\n  onHover,\n}) {\n  const refDrop = useRef(null);\n  return (\n    <Box\n      ref={refDrop}\n      className={styles.dragContainer}\n      sx={{ backgroundColor: \"background.default\" }}\n    >\n      {options.map((option, index) => {\n        return (\n          <Fragment key={option.code}>\n            <DropArea\n              itemType={itemType}\n              index={index}\n              key={\"drop\" + option.code}\n              onItemTransfer={onItemTransfer}\n            />\n            <RankingOption\n              index={index}\n              key={option.code}\n              onHover={onHover}\n              itemType={itemType}\n              option={option}\n              rankingItemStyle={styles.rankingItem}\n              onDoubleClick={onDoubleClick}\n            />\n          </Fragment>\n        );\n      })}\n      <DropArea\n        itemType={itemType}\n        index={options.length}\n        key=\"last\"\n        fillParent={true}\n        onItemTransfer={onItemTransfer}\n      />\n    </Box>\n  );\n}\n\nfunction RankingOption({\n  option,\n  onDoubleClick,\n  rankingItemStyle,\n  index,\n  onHover,\n  itemType,\n}) {\n  const containerRef = useRef();\n  const item = {\n    index: index,\n    qualifiedCode: option.qualifiedCode,\n  };\n  const [isDragging, drag, preview] = useDrag({\n    type: \"rankingOption\",\n    item,\n    collect: (monitor) =>\n      monitor.getItem()?.qualifiedCode === option.qualifiedCode,\n  });\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"rankingOption\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (\n        !containerRef.current ||\n        !monitor.isOver({ shallow: true }) ||\n        !item\n      ) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = containerRef.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      onHover(item, option, itemType, index);\n    },\n  });\n  drop(preview(containerRef));\n  return (\n    <div ref={drag}>\n      <Box\n        ref={containerRef}\n        data-handler-id={handlerId}\n        style={{\n          opacity: isDragging ? \"0.2\" : \"1\",\n        }}\n        onDoubleClick={() => onDoubleClick(item)}\n        className={rankingItemStyle}\n        sx={{ backgroundColor: \"background.paper\" }}\n      >\n        {option.content?.label}\n      </Box>\n    </div>\n  );\n}\n\nfunction DropArea({ index, onItemTransfer, itemType, fillParent }) {\n  const containerRef = useRef();\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"rankingOption\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (\n        !containerRef.current ||\n        !monitor.isOver({ shallow: true }) ||\n        !item\n      ) {\n        return;\n      }\n      onItemTransfer(item, index, itemType);\n    },\n  });\n  drop(containerRef);\n  return (\n    <div\n      style={{ flex: fillParent ? 1 : \"inherit\", minHeight: \"12px\" }}\n      ref={containerRef}\n      data-handler-id={handlerId}\n    />\n  );\n}\n\nexport default Ranking;\n"],"names":["Ranking","props","dispatch","useDispatch","state","useSelector","valuesMap","component","answers","forEach","element","qualifiedCode","runState","values","value","shallowEqual","itemTypeByCode","code","isNaN","order","withoutOrder","filter","option","sort","a","b","withOrder","onItemTransfer","item","index","itemType","unOrdered","_objectSpread","currentOrder","key","hasOwnProperty","valueChange","componentCode","oldOrder","orderChange","onDoubleClick","length","onHover","hoveringItem","currentItem","currentItemType","currentItemIndex","hoveringOrder","jsxs","style","display","gridTemplateColumns","children","jsx","RankingContainer","styles","ordererLength","unordererLength","options","refDrop","useRef","Box","ref","className","dragContainer","sx","backgroundColor","map","Fragment","DropArea","RankingOption","rankingItemStyle","rankingItem","fillParent","_option$content","containerRef","_useDrag","useDrag","type","collect","monitor","_monitor$getItem","getItem","_useDrag2","_slicedToArray","isDragging","drag","preview","_useDrop","useDrop","accept","handlerId","getHandlerId","hover","_containerRef$current","current","isOver","shallow","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","_useDrop2","drop","opacity","content","label","_useDrop3","_useDrop4","flex","minHeight"],"mappings":"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"}