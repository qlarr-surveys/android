{"version":3,"file":"Ranking-BViNuao0.js","sources":["../../node_modules/react-dnd/dist/internals/DropTargetMonitorImpl.js","../../node_modules/react-dnd/dist/internals/TargetConnector.js","../../node_modules/react-dnd/dist/hooks/useDrop/connectors.js","../../node_modules/react-dnd/dist/hooks/useDrop/useDropTargetConnector.js","../../node_modules/react-dnd/dist/hooks/useDrop/useDropTargetMonitor.js","../../node_modules/react-dnd/dist/hooks/useDrop/useAccept.js","../../node_modules/react-dnd/dist/hooks/useDrop/DropTargetImpl.js","../../node_modules/react-dnd/dist/hooks/useDrop/useDropTarget.js","../../node_modules/react-dnd/dist/hooks/useDrop/useRegisteredDropTarget.js","../../node_modules/react-dnd/dist/hooks/useDrop/useDrop.js","../../src/components/Questions/Ranking/Ranking.jsx"],"sourcesContent":["import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n    receiveHandlerId(targetId) {\n        this.targetId = targetId;\n    }\n    getHandlerId() {\n        return this.targetId;\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    canDrop() {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        } finally{\n            isCallingCanDrop = false;\n        }\n    }\n    isOver(options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n    constructor(manager){\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n}\n\n//# sourceMappingURL=DropTargetMonitorImpl.js.map","import { shallowEqual } from '@react-dnd/shallowequal';\nimport { isRef } from './isRef.js';\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js';\nexport class TargetConnector {\n    get connectTarget() {\n        return this.dropTarget;\n    }\n    reconnect() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        const dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    }\n    receiveHandlerId(newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get dropTargetOptions() {\n        return this.dropTargetOptionsInternal;\n    }\n    set dropTargetOptions(options) {\n        this.dropTargetOptionsInternal = options;\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didDropTargetChange() {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    }\n    didOptionsChange() {\n        return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    }\n    disconnectDropTarget() {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    }\n    get dropTarget() {\n        return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;\n    }\n    clearDropTarget() {\n        this.dropTargetRef = null;\n        this.dropTargetNode = null;\n    }\n    constructor(backend){\n        this.hooks = wrapConnectorHooks({\n            dropTarget: (node, options)=>{\n                this.clearDropTarget();\n                this.dropTargetOptions = options;\n                if (isRef(node)) {\n                    this.dropTargetRef = node;\n                } else {\n                    this.dropTargetNode = node;\n                }\n                this.reconnect();\n            }\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n        this.backend = backend;\n    }\n}\n\n//# sourceMappingURL=TargetConnector.js.map","import { useMemo } from 'react';\nexport function useConnectDropTarget(connector) {\n    return useMemo(()=>connector.hooks.dropTarget()\n    , [\n        connector\n    ]);\n}\n\n//# sourceMappingURL=connectors.js.map","import { useMemo } from 'react';\nimport { TargetConnector } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nexport function useDropTargetConnector(options) {\n    const manager = useDragDropManager();\n    const connector = useMemo(()=>new TargetConnector(manager.getBackend())\n    , [\n        manager\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        connector.dropTargetOptions = options || null;\n        connector.reconnect();\n        return ()=>connector.disconnectDropTarget()\n        ;\n    }, [\n        options\n    ]);\n    return connector;\n}\n\n//# sourceMappingURL=useDropTargetConnector.js.map","import { useMemo } from 'react';\nimport { DropTargetMonitorImpl } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nexport function useDropTargetMonitor() {\n    const manager = useDragDropManager();\n    return useMemo(()=>new DropTargetMonitorImpl(manager)\n    , [\n        manager\n    ]);\n}\n\n//# sourceMappingURL=useDropTargetMonitor.js.map","import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */ export function useAccept(spec) {\n    const { accept  } = spec;\n    return useMemo(()=>{\n        invariant(spec.accept != null, 'accept must be defined');\n        return Array.isArray(accept) ? accept : [\n            accept\n        ];\n    }, [\n        accept\n    ]);\n}\n\n//# sourceMappingURL=useAccept.js.map","export class DropTargetImpl {\n    canDrop() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        return spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true;\n    }\n    hover() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (spec.hover) {\n            spec.hover(monitor.getItem(), monitor);\n        }\n    }\n    drop() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (spec.drop) {\n            return spec.drop(monitor.getItem(), monitor);\n        }\n        return;\n    }\n    constructor(spec, monitor){\n        this.spec = spec;\n        this.monitor = monitor;\n    }\n}\n\n//# sourceMappingURL=DropTargetImpl.js.map","import { useEffect, useMemo } from 'react';\nimport { DropTargetImpl } from './DropTargetImpl.js';\nexport function useDropTarget(spec, monitor) {\n    const dropTarget = useMemo(()=>new DropTargetImpl(spec, monitor)\n    , [\n        monitor\n    ]);\n    useEffect(()=>{\n        dropTarget.spec = spec;\n    }, [\n        spec\n    ]);\n    return dropTarget;\n}\n\n//# sourceMappingURL=useDropTarget.js.map","import { registerTarget } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nimport { useAccept } from './useAccept.js';\nimport { useDropTarget } from './useDropTarget.js';\nexport function useRegisteredDropTarget(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const dropTarget = useDropTarget(spec, monitor);\n    const accept = useAccept(spec);\n    useIsomorphicLayoutEffect(function registerDropTarget() {\n        const [handlerId, unregister] = registerTarget(accept, dropTarget, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, [\n        manager,\n        monitor,\n        dropTarget,\n        connector,\n        accept.map((a)=>a.toString()\n        ).join('|'), \n    ]);\n}\n\n//# sourceMappingURL=useRegisteredDropTarget.js.map","import { useCollectedProps } from '../useCollectedProps.js';\nimport { useOptionalFactory } from '../useOptionalFactory.js';\nimport { useConnectDropTarget } from './connectors.js';\nimport { useDropTargetConnector } from './useDropTargetConnector.js';\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js';\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */ export function useDrop(specArg, deps) {\n    const spec = useOptionalFactory(specArg, deps);\n    const monitor = useDropTargetMonitor();\n    const connector = useDropTargetConnector(spec.options);\n    useRegisteredDropTarget(spec, monitor, connector);\n    return [\n        useCollectedProps(spec.collect, monitor, connector),\n        useConnectDropTarget(connector), \n    ];\n}\n\n//# sourceMappingURL=useDrop.js.map","import { Box } from \"@mui/system\";\nimport React, { Fragment, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport styles from \"./Ranking.module.css\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { orderChange, valueChange } from \"~/state/runState\";\n\nfunction Ranking(props) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      valuesMap[element.qualifiedCode] =\n        state.runState.values[element.qualifiedCode].value;\n    });\n    return valuesMap;\n  }, shallowEqual);\n\n  const itemTypeByCode = (code) => {\n    return isNaN(state[code]) ? \"unsorted\" : \"sorted\";\n  };\n\n  const order = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      if (state.runState.order) {\n        valuesMap[element.qualifiedCode] =\n          state.runState.order[element.qualifiedCode];\n      } else {\n        valuesMap[element.qualifiedCode] =\n          state.runState.values[element.qualifiedCode].order + 1;\n      }\n    });\n    return valuesMap;\n  }, shallowEqual);\n\n  const withoutOrder = props.component.answers\n    .filter((option) => !state[option.qualifiedCode])\n    .sort(function (a, b) {\n      return order[a.qualifiedCode] - order[b.qualifiedCode];\n    });\n\n  const withOrder = props.component.answers\n    .filter((option) => +state[option.qualifiedCode] > 0)\n    .sort(function (a, b) {\n      return state[a.qualifiedCode] - state[b.qualifiedCode];\n    });\n\n  const onItemTransfer = (item, index, itemType) => {\n    const unOrdered = { ...order };\n    if (\n      itemType == \"sorted\" &&\n      itemTypeByCode(item.qualifiedCode) == \"unsorted\"\n    ) {\n      const currentOrder = index + 1;\n      for (let key in state) {\n        if (state.hasOwnProperty(key)) {\n          if (state[key] >= currentOrder) {\n            dispatch(\n              valueChange({\n                componentCode: key,\n                value: state[key] + 1,\n              })\n            );\n          }\n        }\n      }\n      dispatch(\n        valueChange({\n          componentCode: item.qualifiedCode,\n          value: currentOrder,\n        })\n      );\n      item.index = index;\n\n      const oldOrder = unOrdered[item.qualifiedCode];\n      withoutOrder.forEach((item) => {\n        if (unOrdered[item.qualifiedCode] >= oldOrder) {\n          unOrdered[item.qualifiedCode] = unOrdered[item.qualifiedCode] - 1;\n        }\n      });\n\n      dispatch(orderChange(unOrdered));\n    } else if (\n      itemType == \"unsorted\" &&\n      itemTypeByCode(item.qualifiedCode) == \"sorted\"\n    ) {\n      const currentOrder = state[item.qualifiedCode];\n      for (let key in state) {\n        if (state.hasOwnProperty(key)) {\n          if (state[key] >= currentOrder) {\n            dispatch(\n              valueChange({\n                componentCode: key,\n                value: state[key] - 1,\n              })\n            );\n          }\n        }\n      }\n      dispatch(\n        valueChange({\n          componentCode: item.qualifiedCode,\n          value: undefined,\n        })\n      );\n      item.index = index;\n\n      const oldOrder = index + 1;\n\n      withoutOrder.forEach((item) => {\n        if (unOrdered[item.qualifiedCode] >= oldOrder) {\n          unOrdered[item.qualifiedCode] = unOrdered[item.qualifiedCode] + 1;\n        }\n      });\n      unOrdered[item.qualifiedCode] = oldOrder;\n      dispatch(orderChange(unOrdered));\n    }\n  };\n\n  const onDoubleClick = (item) => {\n    if (itemTypeByCode(item.qualifiedCode) == \"unsorted\") {\n      onItemTransfer(item, withOrder.length, \"sorted\");\n    } else {\n      onItemTransfer(item, withoutOrder.length, \"unsorted\");\n    }\n  };\n\n  const onHover = (\n    hoveringItem,\n    currentItem,\n    currentItemType,\n    currentItemIndex\n  ) => {\n    const unOrdered = { ...order };\n    if (\n      currentItemType == \"unsorted\" &&\n      itemTypeByCode(hoveringItem.qualifiedCode) == \"unsorted\"\n    ) {\n      const hoveringOrder = unOrdered[hoveringItem.qualifiedCode];\n      unOrdered[hoveringItem.qualifiedCode] =\n        unOrdered[currentItem.qualifiedCode];\n      unOrdered[currentItem.qualifiedCode] = hoveringOrder;\n      dispatch(orderChange(unOrdered));\n      hoveringItem.index = currentItemIndex;\n    } else if (\n      currentItemType == \"sorted\" &&\n      itemTypeByCode(hoveringItem.qualifiedCode) == \"sorted\"\n    ) {\n      dispatch(\n        valueChange({\n          componentCode: hoveringItem.qualifiedCode,\n          value: state[currentItem.qualifiedCode],\n        })\n      );\n      dispatch(\n        valueChange({\n          componentCode: currentItem.qualifiedCode,\n          value: state[hoveringItem.qualifiedCode],\n        })\n      );\n      hoveringItem.index = currentItemIndex;\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n      }}\n    >\n      <RankingContainer\n        styles={styles}\n        ordererLength={withOrder.length}\n        unordererLength={withoutOrder.length}\n        onHover={onHover}\n        order={order}\n        onItemTransfer={onItemTransfer}\n        onDoubleClick={onDoubleClick}\n        itemType=\"unsorted\"\n        options={withoutOrder}\n      />\n      <RankingContainer\n        styles={styles}\n        onHover={onHover}\n        onItemTransfer={onItemTransfer}\n        onDoubleClick={onDoubleClick}\n        ordererLength={withOrder.length}\n        unordererLength={withoutOrder.length}\n        order={order}\n        itemType=\"sorted\"\n        options={withOrder}\n      />\n    </div>\n  );\n}\n\nfunction RankingContainer({\n  styles,\n  itemType,\n  options,\n  onItemTransfer,\n  onDoubleClick,\n  onHover,\n}) {\n  const refDrop = useRef(null);\n  return (\n    <Box\n      ref={refDrop}\n      className={styles.dragContainer}\n      sx={{ backgroundColor: \"background.default\" }}\n    >\n      {options.map((option, index) => {\n        return (\n          <Fragment key={option.code}>\n            <DropArea\n              itemType={itemType}\n              index={index}\n              key={\"drop\" + option.code}\n              onItemTransfer={onItemTransfer}\n            />\n            <RankingOption\n              index={index}\n              key={option.code}\n              onHover={onHover}\n              itemType={itemType}\n              option={option}\n              rankingItemStyle={styles.rankingItem}\n              onDoubleClick={onDoubleClick}\n            />\n          </Fragment>\n        );\n      })}\n      <DropArea\n        itemType={itemType}\n        index={options.length}\n        key=\"last\"\n        fillParent={true}\n        onItemTransfer={onItemTransfer}\n      />\n    </Box>\n  );\n}\n\nfunction RankingOption({\n  option,\n  onDoubleClick,\n  rankingItemStyle,\n  index,\n  onHover,\n  itemType,\n}) {\n  const containerRef = useRef();\n  const item = {\n    index: index,\n    qualifiedCode: option.qualifiedCode,\n  };\n  const [isDragging, drag, preview] = useDrag({\n    type: \"rankingOption\",\n    item,\n    collect: (monitor) =>\n      monitor.getItem()?.qualifiedCode === option.qualifiedCode,\n  });\n\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"rankingOption\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (\n        !containerRef.current ||\n        !monitor.isOver({ shallow: true }) ||\n        !item\n      ) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = containerRef.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      onHover(item, option, itemType, index);\n    },\n  });\n  drop(preview(containerRef));\n  return (\n    <div ref={drag}>\n      <Box\n        ref={containerRef}\n        data-handler-id={handlerId}\n        style={{\n          opacity: isDragging ? \"0.2\" : \"1\",\n        }}\n        onDoubleClick={() => onDoubleClick(item)}\n        className={rankingItemStyle}\n        sx={{ backgroundColor: \"background.paper\" }}\n      >\n        {option.content?.label}\n      </Box>\n    </div>\n  );\n}\n\nfunction DropArea({ index, onItemTransfer, itemType, fillParent }) {\n  const containerRef = useRef();\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"rankingOption\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (\n        !containerRef.current ||\n        !monitor.isOver({ shallow: true }) ||\n        !item\n      ) {\n        return;\n      }\n      onItemTransfer(item, index, itemType);\n    },\n  });\n  drop(containerRef);\n  return (\n    <div\n      style={{ flex: fillParent ? 1 : \"inherit\", minHeight: \"12px\" }}\n      ref={containerRef}\n      data-handler-id={handlerId}\n    />\n  );\n}\n\nexport default Ranking;\n"],"names":["useMemo","useEffect","state","shallowEqual","item","jsxs","jsx","styles","useRef","Fragment","_a"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}