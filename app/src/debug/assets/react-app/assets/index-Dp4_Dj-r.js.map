{"version":3,"file":"index-Dp4_Dj-r.js","sources":["../../src/components/manage/SuccessSnackbar/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Alert, Snackbar } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nexport default function SuccessSnackbar({ success, left }) {\n  const [open, setOpen] = useState(true);\n  const [dir, setDir] = useState(\"ltr\");\n  const { t, i18n } = useTranslation(\"manage\");\n\n  useEffect(() => {\n    if (rtlLanguage.includes(i18n.language)) {\n      setDir(\"rtl\");\n    } else {\n      setDir(\"ltr\");\n    }\n\n    const timer = setTimeout(() => {\n      setOpen(false);\n    }, 2000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [i18n.language]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={2000}\n      onClose={handleClose}\n      sx={{ left: `${left}px !important` }}\n    >\n      <Alert variant=\"standard\" severity=\"success\" onClose={handleClose} dir={dir}>\n        {t(`processed_successes.${success}`)}\n      </Alert>\n    </Snackbar>\n  );\n}\n"],"names":["useState","useEffect","jsx"],"mappings":";;;AAKA,SAAwB,gBAAgB,EAAE,SAAS,QAAQ;AACzD,QAAM,CAAC,MAAM,OAAO,IAAIA,sBAAS,IAAI;AACrC,QAAM,CAAC,KAAK,MAAM,IAAIA,sBAAS,KAAK;AACpC,QAAM,EAAE,GAAG,KAAK,IAAI,eAAe,QAAQ;AAE3CC,eAAAA,UAAU,MAAM;AACd,QAAI,YAAY,SAAS,KAAK,QAAQ,GAAG;AACvC,aAAO,KAAK;AAAA,IAAA,OACP;AACL,aAAO,KAAK;AAAA,IACd;AAEM,UAAA,QAAQ,WAAW,MAAM;AAC7B,cAAQ,KAAK;AAAA,OACZ,GAAI;AAEP,WAAO,MAAM;AACX,mBAAa,KAAK;AAAA,IAAA;AAAA,EACpB,GACC,CAAC,KAAK,QAAQ,CAAC;AAElB,QAAM,cAAc,MAAM;AACxB,YAAQ,KAAK;AAAA,EAAA;AAIb,SAAAC,kCAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA,kBAAkB;AAAA,MAClB,SAAS;AAAA,MACT,IAAI,EAAE,MAAM,GAAG,aAAI,iBAAgB;AAAA,MAEnC,UAACA,kCAAA,IAAA,OAAA,EAAM,SAAQ,YAAW,UAAS,WAAU,SAAS,aAAa,KAChE,UAAA,EAAE,uBAAuB,eAAS,GACrC;AAAA,IAAA;AAAA,EAAA;AAGN;"}