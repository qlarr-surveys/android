{"version":3,"file":"IconMcq-legacy-Db5W0reb.js","sources":["../../src/components/Questions/IconMcq/IconMcq.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./IconMcq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { rtlLanguage } from \"~/utils/common\";\nimport DynamicSvg from \"~/components/DynamicSvg\";\nimport { buildResourceUrl } from \"~/networking/common\";\n\nfunction IconMcq(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      value: questionState?.value || \"\",\n      showValidation:\n        (show_errors || isDirty) && questionState?.validity === false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n  };\n\n  const hideText = props.component?.hideText || false;\n\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing || 8}px`,\n      }}\n      className={styles.iconFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        return (\n          <IconMcqChoice\n            key={option.code}\n            component={option}\n            columns={props.component.columns || 3}\n            iconSize={props.component.iconSize || \"150\"}\n            spacing={props.component.spacing || 8}\n            theme={theme}\n            hideText={hideText}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nfunction IconMcqChoice({\n  key,\n  component,\n  iconSize,\n  columns,\n  spacing,\n  hideText,\n  theme,\n}) {\n  const dispatch = useDispatch();\n  const checked = useSelector(\n    (state) => state.runState.values[component.qualifiedCode].value || false\n  );\n  return (\n    <Box\n      key={key}\n      sx={{\n        flex: `0 1 calc(${100 / columns}% - ${spacing || 8}px)`,\n        textAlign: \"center\",\n        cursor: \"pointer\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <DynamicSvg\n        onIconClick={() =>\n          dispatch(\n            valueChange({\n              componentCode: component.qualifiedCode,\n              value: !checked,\n            })\n          )}\n          imageHeightPx=\"100%\"\n          maxHeight={iconSize + \"px\"}\n          iconColor={\n            checked ? theme.palette.primary.main : theme.textStyles.text.color\n          }\n          svgUrl={\n            component?.resources?.icon\n              ? buildResourceUrl(component?.resources?.icon)\n              : undefined\n          }\n        />\n      </div>\n\n      {!hideText && (\n        <Box\n          sx={{\n            textAlign: \"center\",\n            fontFamily: theme.textStyles.text.font,\n            color: checked\n              ? theme.palette.primary.main\n              : theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {component.content?.label}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default IconMcq;\n"],"names":["IconMcq","props","_props$component","theme","useTheme","useSelector","state","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","value","showValidation","validity","shallowEqual","useDispatch","hideText","lang","jsx","Box","sx","gap","spacing","className","styles","iconFlexContainer","children","answers","map","option","IconMcqChoice","columns","iconSize","code","key","_component$resources","_component$resources2","_component$content","dispatch","checked","jsxs","flex","textAlign","cursor","style","display","justifyContent","width","DynamicSvg","onIconClick","valueChange","componentCode","imageHeightPx","maxHeight","iconColor","palette","primary","main","textStyles","text","color","svgUrl","resources","icon","buildResourceUrl","fontFamily","font","fontSize","size","content","label"],"mappings":"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"}