{"version":3,"file":"DateTimeQuestion-DorIToMg.js","sources":["../../src/components/Questions/DateTime/DateTimeQuestion.jsx"],"sourcesContent":["import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport dayjs from \"dayjs\";\n\nimport styles from \"./DateTimeQuestion.module.css\";\nimport { useTheme } from \"@mui/system\";\nimport { valueChange } from \"~/state/runState\";\n\nfunction DateTimeQuestion(props) {\n  const theme = useTheme();\n\n  const state = useSelector((state) => {\n    let own = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      invalid: (show_errors || isDirty) && own?.validity === false,\n      value: own?.value\n        ? dayjs(window.QlarrScripts.sqlDateTimeToDate(own?.value))\n        : null,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleDateChange = (date) => {\n    let finalDate = date === null ? undefined : date.toDate();\n    dispatch(\n      valueChange({\n        componentCode: props.component.qualifiedCode,\n\n        value:\n          props.component.type == \"date_time\"\n            ? window.QlarrScripts.toSqlDateTime(finalDate)\n            : props.component.type == \"time\"\n              ? window.QlarrScripts.toSqlDateTimeIgnoreDate(finalDate)\n              : window.QlarrScripts.toSqlDateTimeIgnoreTime(finalDate),\n      })\n    );\n  };\n\n  const dateFormat = props.component.dateFormat\n    ? props.component.dateFormat\n    : \"DD.MM.YYYY\";\n\n  return (\n    <div className={styles.wrapper}>\n      <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale=\"ar-sa\">\n        {props.component.type == \"date_time\" ? (\n          <>\n            <DateTimePicker\n              renderInput={(props) => (\n                <TextField\n                  sx={{\n                    svg: { color: theme.textStyles.text.color },\n                    border: '1px solid',\n                    '& .MuiOutlinedInput-root': {\n                      '&.Mui-focused fieldset': {\n                        borderColor: theme.textStyles.text.color,\n                      },\n                    },\n                  }}\n                  onKeyDown={(e) => e.preventDefault()} {...props} />\n              )}\n              margin=\"normal\"\n              value={state.value}\n              inputFormat={\n                dateFormat +\n                \" \" +\n                (props.component.fullDayFormat ? \"HH:mm\" : \"hh:mm A\")\n              }\n              PaperProps={{\n                sx: {\n                  backgroundColor: 'white',\n                  \"& .MuiPickersDay-root\": {\n                    backgroundColor: 'white',\n                  },\n                },\n              }}\n\n              ampm={props.component.fullDayFormat ? false : true}\n              openTo=\"year\"\n              views={[\"year\", \"month\", \"day\", \"hours\", \"minutes\"]}\n              id={props.component.qualifiedCode}\n              minDate={\n                props.component.minDate\n                  ? dayjs(\n                    window.QlarrScripts.dateStringToDate(\n                      props.component.minDate\n                    )\n                  )\n                  : undefined\n              }\n              maxDate={\n                props.component.maxDate\n                  ? dayjs(\n                    window.QlarrScripts.dateStringToDate(\n                      props.component.maxDate\n                    )\n                  )\n                  : undefined\n              }\n              error={state.invalid}\n              onChange={handleDateChange}\n              InputProps={{\n                sx: {\n                  fontFamily: theme.textStyles.text.font,\n                  fontSize: theme.textStyles.text.size,\n                  color: theme.textStyles.text.color,\n                },\n              }}\n            />\n          </>\n        ) : props.component.type == \"time\" ? (\n          <TimePicker\n            renderInput={(params) => (\n              <TextField\n                sx={{\n                  svg: { color: theme.textStyles.text.color },\n                  border: '1px solid',\n                  '& .MuiOutlinedInput-root': {\n                    '&.Mui-focused fieldset': {\n                      borderColor: theme.textStyles.text.color,\n                    },\n                  },\n                }}\n                onKeyDown={(e) => e.preventDefault()} {...params} />\n            )}\n            margin=\"normal\"\n            openTo=\"hours\"\n            views={[\"hours\", \"minutes\"]}\n            ampm={props.component.fullDayFormat ? false : true}\n            inputFormat={props.component.fullDayFormat ? \"HH:mm\" : \"hh:mm A\"}\n            id={props.component.qualifiedCode}\n            value={state.value}\n            error={state.invalid}\n            onChange={handleDateChange}\n            PaperProps={{\n              sx: {\n                backgroundColor: 'white',\n                \"& .MuiPickersDay-root\": {\n                  backgroundColor: 'white',\n                },\n              },\n            }}\n\n            InputProps={{\n              sx: {\n                fontFamily: theme.textStyles.text.font,\n                color: theme.textStyles.text.color,\n                fontSize: theme.textStyles.text.size\n              },\n            }}\n          />\n        ) : (\n          <DatePicker\n            renderInput={(params) => (\n              <TextField\n                sx={{\n                  svg: { color: theme.textStyles.text.color },\n                  input: { color: theme.textStyles.text.color },\n                  border: '1px solid',\n                  '& .MuiOutlinedInput-root': {\n                    '&.Mui-focused fieldset': {\n                      borderColor: theme.textStyles.text.color,\n                    },\n                  },\n                }}\n\n                onKeyDown={(e) => e.preventDefault()} {...params} />\n            )}\n            margin=\"normal\"\n            openTo=\"year\"\n            views={[\"year\", \"month\", \"day\"]}\n            ampm={props.component.fullDayFormat ? false : true}\n            id={props.component.qualifiedCode}\n            inputFormat={dateFormat}\n            value={state.value}\n            minDate={\n              props.component.minDate\n                ? window.QlarrScripts.dateStringToDate(\n                  props.component.minDate\n                )\n                : undefined\n            }\n            PaperProps={{\n              sx: {\n                backgroundColor: 'white',\n                \"& .MuiPickersDay-root\": {\n                  backgroundColor: 'white',\n                },\n              },\n            }}\n            maxDate={\n              props.component.maxDate\n                ? window.QlarrScripts.dateStringToDate(\n                  props.component.maxDate\n                )\n                : undefined\n            }\n            error={state.invalid}\n            onChange={handleDateChange}\n            InputProps={{\n              sx: {\n                fontFamily: theme.textStyles.text.font,\n                fontSize: theme.textStyles.text.size,\n              },\n            }}\n          />\n        )}\n      </LocalizationProvider>\n    </div>\n  );\n}\n\nexport default DateTimeQuestion;\n"],"names":["state","jsx","Fragment","props"],"mappings":"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"}