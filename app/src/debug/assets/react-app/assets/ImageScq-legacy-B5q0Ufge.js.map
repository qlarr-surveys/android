{"version":3,"file":"ImageScq-legacy-B5q0Ufge.js","sources":["../../src/components/Questions/ImageScq/ImageScq.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./ImageScq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Card, Grid, Radio } from \"@mui/material\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageScq(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      value: questionState?.value || \"\",\n      showValidation:\n        (show_errors || isDirty) && questionState?.validity === false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n  };\n\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Box\n      sx={{\n        gap: `${props.component.spacing}px`,\n        justifyContent: isRtl ? \"flex-end\" : \"flex-start\",\n      }}\n      className={styles.imageFlexContainer}\n    >\n      {props.component.answers.map((option) => {\n        const backgroundImage = option.resources?.image\n          ? `url('${buildResourceUrl(option.resources?.image)}')`\n          : `url('/placeholder-image.jpg')`;\n        return (\n          <Box\n            key={option.code}\n            sx={{\n              flex: `0 1 calc(${100 / props.component.columns}% - ${props.component.spacing}px)`,\n              cursor: \"pointer\",\n            }}\n            onClick={() =>\n              handleChange(props.component.qualifiedCode, option.code)\n            }\n          >\n            <Box\n              className={styles.imageContainer}\n              style={{\n                paddingTop: `${100 / props.component.imageAspectRatio}%`,\n                borderRadius: \"4px\",\n                backgroundImage: backgroundImage,\n                border:\n                  state.value === option.code\n                    ? `4px solid ${theme.palette.primary.main}`\n                    : \"4px solid transparent\",\n              }}\n            >\n              <div className={styles.selection}>\n                <Radio\n                  checked={state.value === option.code}\n                  onChange={(event) =>\n                    handleChange(event.target.name, event.target.value)\n                  }\n                  value={option.code}\n                  className={styles.radioCheck}\n                  name={props.component.qualifiedCode}\n                  size=\"large\"\n                  sx={{\n                    m:'5px',\n                    color: theme.textStyles.text.color,\n                  }}\n                />\n              </div>\n            </Box>\n            {!props.component.hideText && (\n              <Box\n                sx={{\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                  textAlign: \"center\",\n                  marginTop: \"8px\",\n                }}\n              >\n                {option.content?.label}\n              </Box>\n            )}\n          </Box>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default ImageScq;\n"],"names":["ImageScq","props","theme","useTheme","state","useSelector","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","value","showValidation","validity","shallowEqual","dispatch","useDispatch","handleChange","componentCode","valueChange","lang","isRtl","rtlLanguage","includes","jsx","Box","sx","gap","spacing","justifyContent","className","styles","imageFlexContainer","children","answers","map","option","_option$resources","_option$resources2","_option$content","backgroundImage","resources","image","buildResourceUrl","jsxs","flex","columns","cursor","onClick","code","imageContainer","style","paddingTop","imageAspectRatio","borderRadius","border","palette","primary","main","selection","Radio","checked","onChange","event","target","name","radioCheck","size","m","color","textStyles","text","hideText","fontFamily","font","fontSize","textAlign","marginTop","content","label"],"mappings":"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"}